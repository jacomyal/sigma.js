import{a as Rt}from"./_commonjsHelpers-C4iS2aBk.js";function Gt(r){const e=document.getElementById("storybook-root");e&&new MutationObserver((i,n)=>{r(),n.disconnect()}).observe(e,{childList:!0})}function Wn(r){return()=>{const e=r();e&&Gt(e)}}var oe={exports:{}},ke;function Nt(){if(ke)return oe.exports;ke=1;var r=typeof Reflect=="object"?Reflect:null,e=r&&typeof r.apply=="function"?r.apply:function(p,w,x){return Function.prototype.apply.call(p,w,x)},t;r&&typeof r.ownKeys=="function"?t=r.ownKeys:Object.getOwnPropertySymbols?t=function(p){return Object.getOwnPropertyNames(p).concat(Object.getOwnPropertySymbols(p))}:t=function(p){return Object.getOwnPropertyNames(p)};function i(f){console&&console.warn&&console.warn(f)}var n=Number.isNaN||function(p){return p!==p};function s(){s.init.call(this)}oe.exports=s,oe.exports.once=b,s.EventEmitter=s,s.prototype._events=void 0,s.prototype._eventsCount=0,s.prototype._maxListeners=void 0;var o=10;function a(f){if(typeof f!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof f)}Object.defineProperty(s,"defaultMaxListeners",{enumerable:!0,get:function(){return o},set:function(f){if(typeof f!="number"||f<0||n(f))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+f+".");o=f}}),s.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},s.prototype.setMaxListeners=function(p){if(typeof p!="number"||p<0||n(p))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+p+".");return this._maxListeners=p,this};function d(f){return f._maxListeners===void 0?s.defaultMaxListeners:f._maxListeners}s.prototype.getMaxListeners=function(){return d(this)},s.prototype.emit=function(p){for(var w=[],x=1;x<arguments.length;x++)w.push(arguments[x]);var A=p==="error",R=this._events;if(R!==void 0)A=A&&R.error===void 0;else if(!A)return!1;if(A){var L;if(w.length>0&&(L=w[0]),L instanceof Error)throw L;var P=new Error("Unhandled error."+(L?" ("+L.message+")":""));throw P.context=L,P}var J=R[p];if(J===void 0)return!1;if(typeof J=="function")e(J,this,w);else for(var Ne=J.length,Dt=m(J,Ne),x=0;x<Ne;++x)e(Dt[x],this,w);return!0};function h(f,p,w,x){var A,R,L;if(a(w),R=f._events,R===void 0?(R=f._events=Object.create(null),f._eventsCount=0):(R.newListener!==void 0&&(f.emit("newListener",p,w.listener?w.listener:w),R=f._events),L=R[p]),L===void 0)L=R[p]=w,++f._eventsCount;else if(typeof L=="function"?L=R[p]=x?[w,L]:[L,w]:x?L.unshift(w):L.push(w),A=d(f),A>0&&L.length>A&&!L.warned){L.warned=!0;var P=new Error("Possible EventEmitter memory leak detected. "+L.length+" "+String(p)+" listeners added. Use emitter.setMaxListeners() to increase limit");P.name="MaxListenersExceededWarning",P.emitter=f,P.type=p,P.count=L.length,i(P)}return f}s.prototype.addListener=function(p,w){return h(this,p,w,!1)},s.prototype.on=s.prototype.addListener,s.prototype.prependListener=function(p,w){return h(this,p,w,!0)};function c(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function u(f,p,w){var x={fired:!1,wrapFn:void 0,target:f,type:p,listener:w},A=c.bind(x);return A.listener=w,x.wrapFn=A,A}s.prototype.once=function(p,w){return a(w),this.on(p,u(this,p,w)),this},s.prototype.prependOnceListener=function(p,w){return a(w),this.prependListener(p,u(this,p,w)),this},s.prototype.removeListener=function(p,w){var x,A,R,L,P;if(a(w),A=this._events,A===void 0)return this;if(x=A[p],x===void 0)return this;if(x===w||x.listener===w)--this._eventsCount===0?this._events=Object.create(null):(delete A[p],A.removeListener&&this.emit("removeListener",p,x.listener||w));else if(typeof x!="function"){for(R=-1,L=x.length-1;L>=0;L--)if(x[L]===w||x[L].listener===w){P=x[L].listener,R=L;break}if(R<0)return this;R===0?x.shift():_(x,R),x.length===1&&(A[p]=x[0]),A.removeListener!==void 0&&this.emit("removeListener",p,P||w)}return this},s.prototype.off=s.prototype.removeListener,s.prototype.removeAllListeners=function(p){var w,x,A;if(x=this._events,x===void 0)return this;if(x.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):x[p]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete x[p]),this;if(arguments.length===0){var R=Object.keys(x),L;for(A=0;A<R.length;++A)L=R[A],L!=="removeListener"&&this.removeAllListeners(L);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(w=x[p],typeof w=="function")this.removeListener(p,w);else if(w!==void 0)for(A=w.length-1;A>=0;A--)this.removeListener(p,w[A]);return this};function l(f,p,w){var x=f._events;if(x===void 0)return[];var A=x[p];return A===void 0?[]:typeof A=="function"?w?[A.listener||A]:[A]:w?v(A):m(A,A.length)}s.prototype.listeners=function(p){return l(this,p,!0)},s.prototype.rawListeners=function(p){return l(this,p,!1)},s.listenerCount=function(f,p){return typeof f.listenerCount=="function"?f.listenerCount(p):g.call(f,p)},s.prototype.listenerCount=g;function g(f){var p=this._events;if(p!==void 0){var w=p[f];if(typeof w=="function")return 1;if(w!==void 0)return w.length}return 0}s.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]};function m(f,p){for(var w=new Array(p),x=0;x<p;++x)w[x]=f[x];return w}function _(f,p){for(;p+1<f.length;p++)f[p]=f[p+1];f.pop()}function v(f){for(var p=new Array(f.length),w=0;w<p.length;++w)p[w]=f[w].listener||f[w];return p}function b(f,p){return new Promise(function(w,x){function A(L){f.removeListener(p,R),x(L)}function R(){typeof f.removeListener=="function"&&f.removeListener("error",A),w([].slice.call(arguments))}S(f,p,R,{once:!0}),p!=="error"&&C(f,A,{once:!0})})}function C(f,p,w){typeof f.on=="function"&&S(f,"error",p,w)}function S(f,p,w,x){if(typeof f.on=="function")x.once?f.once(p,w):f.on(p,w);else if(typeof f.addEventListener=="function")f.addEventListener(p,function A(R){x.once&&f.removeEventListener(p,A),w(R)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof f)}return oe.exports}var et=Nt();function kt(){const r=arguments[0];for(let e=1,t=arguments.length;e<t;e++)if(arguments[e])for(const i in arguments[e])r[i]=arguments[e][i];return r}let G=kt;typeof Object.assign=="function"&&(G=Object.assign);function F(r,e,t,i){const n=r._nodes.get(e);let s=null;return n&&(i==="mixed"?s=n.out&&n.out[t]||n.undirected&&n.undirected[t]:i==="directed"?s=n.out&&n.out[t]:s=n.undirected&&n.undirected[t]),s}function N(r){return typeof r=="object"&&r!==null}function tt(r){let e;for(e in r)return!1;return!0}function k(r,e,t){Object.defineProperty(r,e,{enumerable:!1,configurable:!1,writable:!0,value:t})}function $(r,e,t){const i={enumerable:!0,configurable:!0};typeof t=="function"?i.get=t:(i.value=t,i.writable=!1),Object.defineProperty(r,e,i)}function Fe(r){return!(!N(r)||r.attributes&&!Array.isArray(r.attributes))}function Ft(){let r=Math.floor(Math.random()*256)&255;return()=>r++}function O(){const r=arguments;let e=null,t=-1;return{[Symbol.iterator](){return this},next(){let i=null;do{if(e===null){if(t++,t>=r.length)return{done:!0};e=r[t][Symbol.iterator]()}if(i=e.next(),i.done){e=null;continue}break}while(!0);return i}}}function K(){return{[Symbol.iterator](){return this},next(){return{done:!0}}}}class Ce extends Error{constructor(e){super(),this.name="GraphError",this.message=e}}class E extends Ce{constructor(e){super(e),this.name="InvalidArgumentsGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,E.prototype.constructor)}}class y extends Ce{constructor(e){super(e),this.name="NotFoundGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,y.prototype.constructor)}}class T extends Ce{constructor(e){super(e),this.name="UsageGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,T.prototype.constructor)}}function it(r,e){this.key=r,this.attributes=e,this.clear()}it.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.undirectedDegree=0,this.undirectedLoops=0,this.directedLoops=0,this.in={},this.out={},this.undirected={}};function nt(r,e){this.key=r,this.attributes=e,this.clear()}nt.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.directedLoops=0,this.in={},this.out={}};function rt(r,e){this.key=r,this.attributes=e,this.clear()}rt.prototype.clear=function(){this.undirectedDegree=0,this.undirectedLoops=0,this.undirected={}};function Z(r,e,t,i,n){this.key=e,this.attributes=n,this.undirected=r,this.source=t,this.target=i}Z.prototype.attach=function(){let r="out",e="in";this.undirected&&(r=e="undirected");const t=this.source.key,i=this.target.key;this.source[r][i]=this,!(this.undirected&&t===i)&&(this.target[e][t]=this)};Z.prototype.attachMulti=function(){let r="out",e="in";const t=this.source.key,i=this.target.key;this.undirected&&(r=e="undirected");const n=this.source[r],s=n[i];if(typeof s>"u"){n[i]=this,this.undirected&&t===i||(this.target[e][t]=this);return}s.previous=this,this.next=s,n[i]=this,this.target[e][t]=this};Z.prototype.detach=function(){const r=this.source.key,e=this.target.key;let t="out",i="in";this.undirected&&(t=i="undirected"),delete this.source[t][e],delete this.target[i][r]};Z.prototype.detachMulti=function(){const r=this.source.key,e=this.target.key;let t="out",i="in";this.undirected&&(t=i="undirected"),this.previous===void 0?this.next===void 0?(delete this.source[t][e],delete this.target[i][r]):(this.next.previous=void 0,this.source[t][e]=this.next,this.target[i][r]=this.next):(this.previous.next=this.next,this.next!==void 0&&(this.next.previous=this.previous))};const st=0,ot=1,Pt=2,at=3;function B(r,e,t,i,n,s,o){let a,d,h,c;if(i=""+i,t===st){if(a=r._nodes.get(i),!a)throw new y(`Graph.${e}: could not find the "${i}" node in the graph.`);h=n,c=s}else if(t===at){if(n=""+n,d=r._edges.get(n),!d)throw new y(`Graph.${e}: could not find the "${n}" edge in the graph.`);const u=d.source.key,l=d.target.key;if(i===u)a=d.target;else if(i===l)a=d.source;else throw new y(`Graph.${e}: the "${i}" node is not attached to the "${n}" edge (${u}, ${l}).`);h=s,c=o}else{if(d=r._edges.get(i),!d)throw new y(`Graph.${e}: could not find the "${i}" edge in the graph.`);t===ot?a=d.source:a=d.target,h=n,c=s}return[a,h,c]}function $t(r,e,t){r.prototype[e]=function(i,n,s){const[o,a]=B(this,e,t,i,n,s);return o.attributes[a]}}function It(r,e,t){r.prototype[e]=function(i,n){const[s]=B(this,e,t,i,n);return s.attributes}}function Mt(r,e,t){r.prototype[e]=function(i,n,s){const[o,a]=B(this,e,t,i,n,s);return o.attributes.hasOwnProperty(a)}}function Ut(r,e,t){r.prototype[e]=function(i,n,s,o){const[a,d,h]=B(this,e,t,i,n,s,o);return a.attributes[d]=h,this.emit("nodeAttributesUpdated",{key:a.key,type:"set",attributes:a.attributes,name:d}),this}}function zt(r,e,t){r.prototype[e]=function(i,n,s,o){const[a,d,h]=B(this,e,t,i,n,s,o);if(typeof h!="function")throw new E(`Graph.${e}: updater should be a function.`);const c=a.attributes,u=h(c[d]);return c[d]=u,this.emit("nodeAttributesUpdated",{key:a.key,type:"set",attributes:a.attributes,name:d}),this}}function Ot(r,e,t){r.prototype[e]=function(i,n,s){const[o,a]=B(this,e,t,i,n,s);return delete o.attributes[a],this.emit("nodeAttributesUpdated",{key:o.key,type:"remove",attributes:o.attributes,name:a}),this}}function Bt(r,e,t){r.prototype[e]=function(i,n,s){const[o,a]=B(this,e,t,i,n,s);if(!N(a))throw new E(`Graph.${e}: provided attributes are not a plain object.`);return o.attributes=a,this.emit("nodeAttributesUpdated",{key:o.key,type:"replace",attributes:o.attributes}),this}}function Ht(r,e,t){r.prototype[e]=function(i,n,s){const[o,a]=B(this,e,t,i,n,s);if(!N(a))throw new E(`Graph.${e}: provided attributes are not a plain object.`);return G(o.attributes,a),this.emit("nodeAttributesUpdated",{key:o.key,type:"merge",attributes:o.attributes,data:a}),this}}function Wt(r,e,t){r.prototype[e]=function(i,n,s){const[o,a]=B(this,e,t,i,n,s);if(typeof a!="function")throw new E(`Graph.${e}: provided updater is not a function.`);return o.attributes=a(o.attributes),this.emit("nodeAttributesUpdated",{key:o.key,type:"update",attributes:o.attributes}),this}}const Vt=[{name:r=>`get${r}Attribute`,attacher:$t},{name:r=>`get${r}Attributes`,attacher:It},{name:r=>`has${r}Attribute`,attacher:Mt},{name:r=>`set${r}Attribute`,attacher:Ut},{name:r=>`update${r}Attribute`,attacher:zt},{name:r=>`remove${r}Attribute`,attacher:Ot},{name:r=>`replace${r}Attributes`,attacher:Bt},{name:r=>`merge${r}Attributes`,attacher:Ht},{name:r=>`update${r}Attributes`,attacher:Wt}];function jt(r){Vt.forEach(function({name:e,attacher:t}){t(r,e("Node"),st),t(r,e("Source"),ot),t(r,e("Target"),Pt),t(r,e("Opposite"),at)})}function Yt(r,e,t){r.prototype[e]=function(i,n){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new T(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new T(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+i,a=""+n;if(n=arguments[2],s=F(this,o,a,t),!s)throw new y(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new T(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,s=this._edges.get(i),!s)throw new y(`Graph.${e}: could not find the "${i}" edge in the graph.`)}return s.attributes[n]}}function Kt(r,e,t){r.prototype[e]=function(i){let n;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new T(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>1){if(this.multi)throw new T(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const s=""+i,o=""+arguments[1];if(n=F(this,s,o,t),!n)throw new y(`Graph.${e}: could not find an edge for the given path ("${s}" - "${o}").`)}else{if(t!=="mixed")throw new T(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,n=this._edges.get(i),!n)throw new y(`Graph.${e}: could not find the "${i}" edge in the graph.`)}return n.attributes}}function Zt(r,e,t){r.prototype[e]=function(i,n){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new T(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new T(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+i,a=""+n;if(n=arguments[2],s=F(this,o,a,t),!s)throw new y(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new T(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,s=this._edges.get(i),!s)throw new y(`Graph.${e}: could not find the "${i}" edge in the graph.`)}return s.attributes.hasOwnProperty(n)}}function qt(r,e,t){r.prototype[e]=function(i,n,s){let o;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new T(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>3){if(this.multi)throw new T(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const a=""+i,d=""+n;if(n=arguments[2],s=arguments[3],o=F(this,a,d,t),!o)throw new y(`Graph.${e}: could not find an edge for the given path ("${a}" - "${d}").`)}else{if(t!=="mixed")throw new T(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,o=this._edges.get(i),!o)throw new y(`Graph.${e}: could not find the "${i}" edge in the graph.`)}return o.attributes[n]=s,this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:n}),this}}function Xt(r,e,t){r.prototype[e]=function(i,n,s){let o;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new T(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>3){if(this.multi)throw new T(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const a=""+i,d=""+n;if(n=arguments[2],s=arguments[3],o=F(this,a,d,t),!o)throw new y(`Graph.${e}: could not find an edge for the given path ("${a}" - "${d}").`)}else{if(t!=="mixed")throw new T(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,o=this._edges.get(i),!o)throw new y(`Graph.${e}: could not find the "${i}" edge in the graph.`)}if(typeof s!="function")throw new E(`Graph.${e}: updater should be a function.`);return o.attributes[n]=s(o.attributes[n]),this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:n}),this}}function Jt(r,e,t){r.prototype[e]=function(i,n){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new T(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new T(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+i,a=""+n;if(n=arguments[2],s=F(this,o,a,t),!s)throw new y(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new T(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,s=this._edges.get(i),!s)throw new y(`Graph.${e}: could not find the "${i}" edge in the graph.`)}return delete s.attributes[n],this.emit("edgeAttributesUpdated",{key:s.key,type:"remove",attributes:s.attributes,name:n}),this}}function Qt(r,e,t){r.prototype[e]=function(i,n){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new T(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new T(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+i,a=""+n;if(n=arguments[2],s=F(this,o,a,t),!s)throw new y(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new T(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,s=this._edges.get(i),!s)throw new y(`Graph.${e}: could not find the "${i}" edge in the graph.`)}if(!N(n))throw new E(`Graph.${e}: provided attributes are not a plain object.`);return s.attributes=n,this.emit("edgeAttributesUpdated",{key:s.key,type:"replace",attributes:s.attributes}),this}}function ei(r,e,t){r.prototype[e]=function(i,n){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new T(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new T(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+i,a=""+n;if(n=arguments[2],s=F(this,o,a,t),!s)throw new y(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new T(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,s=this._edges.get(i),!s)throw new y(`Graph.${e}: could not find the "${i}" edge in the graph.`)}if(!N(n))throw new E(`Graph.${e}: provided attributes are not a plain object.`);return G(s.attributes,n),this.emit("edgeAttributesUpdated",{key:s.key,type:"merge",attributes:s.attributes,data:n}),this}}function ti(r,e,t){r.prototype[e]=function(i,n){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new T(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new T(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+i,a=""+n;if(n=arguments[2],s=F(this,o,a,t),!s)throw new y(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new T(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,s=this._edges.get(i),!s)throw new y(`Graph.${e}: could not find the "${i}" edge in the graph.`)}if(typeof n!="function")throw new E(`Graph.${e}: provided updater is not a function.`);return s.attributes=n(s.attributes),this.emit("edgeAttributesUpdated",{key:s.key,type:"update",attributes:s.attributes}),this}}const ii=[{name:r=>`get${r}Attribute`,attacher:Yt},{name:r=>`get${r}Attributes`,attacher:Kt},{name:r=>`has${r}Attribute`,attacher:Zt},{name:r=>`set${r}Attribute`,attacher:qt},{name:r=>`update${r}Attribute`,attacher:Xt},{name:r=>`remove${r}Attribute`,attacher:Jt},{name:r=>`replace${r}Attributes`,attacher:Qt},{name:r=>`merge${r}Attributes`,attacher:ei},{name:r=>`update${r}Attributes`,attacher:ti}];function ni(r){ii.forEach(function({name:e,attacher:t}){t(r,e("Edge"),"mixed"),t(r,e("DirectedEdge"),"directed"),t(r,e("UndirectedEdge"),"undirected")})}const ri=[{name:"edges",type:"mixed"},{name:"inEdges",type:"directed",direction:"in"},{name:"outEdges",type:"directed",direction:"out"},{name:"inboundEdges",type:"mixed",direction:"in"},{name:"outboundEdges",type:"mixed",direction:"out"},{name:"directedEdges",type:"directed"},{name:"undirectedEdges",type:"undirected"}];function si(r,e,t,i){let n=!1;for(const s in e){if(s===i)continue;const o=e[s];if(n=t(o.key,o.attributes,o.source.key,o.target.key,o.source.attributes,o.target.attributes,o.undirected),r&&n)return o.key}}function oi(r,e,t,i){let n,s,o,a=!1;for(const d in e)if(d!==i){n=e[d];do{if(s=n.source,o=n.target,a=t(n.key,n.attributes,s.key,o.key,s.attributes,o.attributes,n.undirected),r&&a)return n.key;n=n.next}while(n!==void 0)}}function ge(r,e){const t=Object.keys(r),i=t.length;let n,s=0;return{[Symbol.iterator](){return this},next(){do if(n)n=n.next;else{if(s>=i)return{done:!0};const o=t[s++];if(o===e){n=void 0;continue}n=r[o]}while(!n);return{done:!1,value:{edge:n.key,attributes:n.attributes,source:n.source.key,target:n.target.key,sourceAttributes:n.source.attributes,targetAttributes:n.target.attributes,undirected:n.undirected}}}}}function ai(r,e,t,i){const n=e[t];if(!n)return;const s=n.source,o=n.target;if(i(n.key,n.attributes,s.key,o.key,s.attributes,o.attributes,n.undirected)&&r)return n.key}function hi(r,e,t,i){let n=e[t];if(!n)return;let s=!1;do{if(s=i(n.key,n.attributes,n.source.key,n.target.key,n.source.attributes,n.target.attributes,n.undirected),r&&s)return n.key;n=n.next}while(n!==void 0)}function pe(r,e){let t=r[e];if(t.next!==void 0)return{[Symbol.iterator](){return this},next(){if(!t)return{done:!0};const n={edge:t.key,attributes:t.attributes,source:t.source.key,target:t.target.key,sourceAttributes:t.source.attributes,targetAttributes:t.target.attributes,undirected:t.undirected};return t=t.next,{done:!1,value:n}}};let i=!1;return{[Symbol.iterator](){return this},next(){return i===!0?{done:!0}:(i=!0,{done:!1,value:{edge:t.key,attributes:t.attributes,source:t.source.key,target:t.target.key,sourceAttributes:t.source.attributes,targetAttributes:t.target.attributes,undirected:t.undirected}})}}}function di(r,e){if(r.size===0)return[];if(e==="mixed"||e===r.type)return Array.from(r._edges.keys());const t=e==="undirected"?r.undirectedSize:r.directedSize,i=new Array(t),n=e==="undirected",s=r._edges.values();let o=0,a,d;for(;a=s.next(),a.done!==!0;)d=a.value,d.undirected===n&&(i[o++]=d.key);return i}function ht(r,e,t,i){if(e.size===0)return;const n=t!=="mixed"&&t!==e.type,s=t==="undirected";let o,a,d=!1;const h=e._edges.values();for(;o=h.next(),o.done!==!0;){if(a=o.value,n&&a.undirected!==s)continue;const{key:c,attributes:u,source:l,target:g}=a;if(d=i(c,u,l.key,g.key,l.attributes,g.attributes,a.undirected),r&&d)return c}}function ui(r,e){if(r.size===0)return K();const t=e!=="mixed"&&e!==r.type,i=e==="undirected",n=r._edges.values();return{[Symbol.iterator](){return this},next(){let s,o;for(;;){if(s=n.next(),s.done)return s;if(o=s.value,!(t&&o.undirected!==i))break}return{value:{edge:o.key,attributes:o.attributes,source:o.source.key,target:o.target.key,sourceAttributes:o.source.attributes,targetAttributes:o.target.attributes,undirected:o.undirected},done:!1}}}}function Ae(r,e,t,i,n,s){const o=e?oi:si;let a;if(t!=="undirected"&&(i!=="out"&&(a=o(r,n.in,s),r&&a)||i!=="in"&&(a=o(r,n.out,s,i?void 0:n.key),r&&a))||t!=="directed"&&(a=o(r,n.undirected,s),r&&a))return a}function ci(r,e,t,i){const n=[];return Ae(!1,r,e,t,i,function(s){n.push(s)}),n}function li(r,e,t){let i=K();return r!=="undirected"&&(e!=="out"&&typeof t.in<"u"&&(i=O(i,ge(t.in))),e!=="in"&&typeof t.out<"u"&&(i=O(i,ge(t.out,e?void 0:t.key)))),r!=="directed"&&typeof t.undirected<"u"&&(i=O(i,ge(t.undirected))),i}function Se(r,e,t,i,n,s,o){const a=t?hi:ai;let d;if(e!=="undirected"&&(typeof n.in<"u"&&i!=="out"&&(d=a(r,n.in,s,o),r&&d)||typeof n.out<"u"&&i!=="in"&&(i||n.key!==s)&&(d=a(r,n.out,s,o),r&&d))||e!=="directed"&&typeof n.undirected<"u"&&(d=a(r,n.undirected,s,o),r&&d))return d}function fi(r,e,t,i,n){const s=[];return Se(!1,r,e,t,i,n,function(o){s.push(o)}),s}function gi(r,e,t,i){let n=K();return r!=="undirected"&&(typeof t.in<"u"&&e!=="out"&&i in t.in&&(n=O(n,pe(t.in,i))),typeof t.out<"u"&&e!=="in"&&i in t.out&&(e||t.key!==i)&&(n=O(n,pe(t.out,i)))),r!=="directed"&&typeof t.undirected<"u"&&i in t.undirected&&(n=O(n,pe(t.undirected,i))),n}function pi(r,e){const{name:t,type:i,direction:n}=e;r.prototype[t]=function(s,o){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return[];if(!arguments.length)return di(this,i);if(arguments.length===1){s=""+s;const a=this._nodes.get(s);if(typeof a>"u")throw new y(`Graph.${t}: could not find the "${s}" node in the graph.`);return ci(this.multi,i==="mixed"?this.type:i,n,a)}if(arguments.length===2){s=""+s,o=""+o;const a=this._nodes.get(s);if(!a)throw new y(`Graph.${t}:  could not find the "${s}" source node in the graph.`);if(!this._nodes.has(o))throw new y(`Graph.${t}:  could not find the "${o}" target node in the graph.`);return fi(i,this.multi,n,a,o)}throw new E(`Graph.${t}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`)}}function mi(r,e){const{name:t,type:i,direction:n}=e,s="forEach"+t[0].toUpperCase()+t.slice(1,-1);r.prototype[s]=function(h,c,u){if(!(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)){if(arguments.length===1)return u=h,ht(!1,this,i,u);if(arguments.length===2){h=""+h,u=c;const l=this._nodes.get(h);if(typeof l>"u")throw new y(`Graph.${s}: could not find the "${h}" node in the graph.`);return Ae(!1,this.multi,i==="mixed"?this.type:i,n,l,u)}if(arguments.length===3){h=""+h,c=""+c;const l=this._nodes.get(h);if(!l)throw new y(`Graph.${s}:  could not find the "${h}" source node in the graph.`);if(!this._nodes.has(c))throw new y(`Graph.${s}:  could not find the "${c}" target node in the graph.`);return Se(!1,i,this.multi,n,l,c,u)}throw new E(`Graph.${s}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`)}};const o="map"+t[0].toUpperCase()+t.slice(1);r.prototype[o]=function(){const h=Array.prototype.slice.call(arguments),c=h.pop();let u;if(h.length===0){let l=0;i!=="directed"&&(l+=this.undirectedSize),i!=="undirected"&&(l+=this.directedSize),u=new Array(l);let g=0;h.push((m,_,v,b,C,S,f)=>{u[g++]=c(m,_,v,b,C,S,f)})}else u=[],h.push((l,g,m,_,v,b,C)=>{u.push(c(l,g,m,_,v,b,C))});return this[s].apply(this,h),u};const a="filter"+t[0].toUpperCase()+t.slice(1);r.prototype[a]=function(){const h=Array.prototype.slice.call(arguments),c=h.pop(),u=[];return h.push((l,g,m,_,v,b,C)=>{c(l,g,m,_,v,b,C)&&u.push(l)}),this[s].apply(this,h),u};const d="reduce"+t[0].toUpperCase()+t.slice(1);r.prototype[d]=function(){let h=Array.prototype.slice.call(arguments);if(h.length<2||h.length>4)throw new E(`Graph.${d}: invalid number of arguments (expecting 2, 3 or 4 and got ${h.length}).`);if(typeof h[h.length-1]=="function"&&typeof h[h.length-2]!="function")throw new E(`Graph.${d}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`);let c,u;h.length===2?(c=h[0],u=h[1],h=[]):h.length===3?(c=h[1],u=h[2],h=[h[0]]):h.length===4&&(c=h[2],u=h[3],h=[h[0],h[1]]);let l=u;return h.push((g,m,_,v,b,C,S)=>{l=c(l,g,m,_,v,b,C,S)}),this[s].apply(this,h),l}}function yi(r,e){const{name:t,type:i,direction:n}=e,s="find"+t[0].toUpperCase()+t.slice(1,-1);r.prototype[s]=function(d,h,c){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return!1;if(arguments.length===1)return c=d,ht(!0,this,i,c);if(arguments.length===2){d=""+d,c=h;const u=this._nodes.get(d);if(typeof u>"u")throw new y(`Graph.${s}: could not find the "${d}" node in the graph.`);return Ae(!0,this.multi,i==="mixed"?this.type:i,n,u,c)}if(arguments.length===3){d=""+d,h=""+h;const u=this._nodes.get(d);if(!u)throw new y(`Graph.${s}:  could not find the "${d}" source node in the graph.`);if(!this._nodes.has(h))throw new y(`Graph.${s}:  could not find the "${h}" target node in the graph.`);return Se(!0,i,this.multi,n,u,h,c)}throw new E(`Graph.${s}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`)};const o="some"+t[0].toUpperCase()+t.slice(1,-1);r.prototype[o]=function(){const d=Array.prototype.slice.call(arguments),h=d.pop();return d.push((u,l,g,m,_,v,b)=>h(u,l,g,m,_,v,b)),!!this[s].apply(this,d)};const a="every"+t[0].toUpperCase()+t.slice(1,-1);r.prototype[a]=function(){const d=Array.prototype.slice.call(arguments),h=d.pop();return d.push((u,l,g,m,_,v,b)=>!h(u,l,g,m,_,v,b)),!this[s].apply(this,d)}}function wi(r,e){const{name:t,type:i,direction:n}=e,s=t.slice(0,-1)+"Entries";r.prototype[s]=function(o,a){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return K();if(!arguments.length)return ui(this,i);if(arguments.length===1){o=""+o;const d=this._nodes.get(o);if(!d)throw new y(`Graph.${s}: could not find the "${o}" node in the graph.`);return li(i,n,d)}if(arguments.length===2){o=""+o,a=""+a;const d=this._nodes.get(o);if(!d)throw new y(`Graph.${s}:  could not find the "${o}" source node in the graph.`);if(!this._nodes.has(a))throw new y(`Graph.${s}:  could not find the "${a}" target node in the graph.`);return gi(i,n,d,a)}throw new E(`Graph.${s}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`)}}function bi(r){ri.forEach(e=>{pi(r,e),mi(r,e),yi(r,e),wi(r,e)})}const Ei=[{name:"neighbors",type:"mixed"},{name:"inNeighbors",type:"directed",direction:"in"},{name:"outNeighbors",type:"directed",direction:"out"},{name:"inboundNeighbors",type:"mixed",direction:"in"},{name:"outboundNeighbors",type:"mixed",direction:"out"},{name:"directedNeighbors",type:"directed"},{name:"undirectedNeighbors",type:"undirected"}];function fe(){this.A=null,this.B=null}fe.prototype.wrap=function(r){this.A===null?this.A=r:this.B===null&&(this.B=r)};fe.prototype.has=function(r){return this.A!==null&&r in this.A||this.B!==null&&r in this.B};function Q(r,e,t,i,n){for(const s in i){const o=i[s],a=o.source,d=o.target,h=a===t?d:a;if(e&&e.has(h.key))continue;const c=n(h.key,h.attributes);if(r&&c)return h.key}}function Le(r,e,t,i,n){if(e!=="mixed"){if(e==="undirected")return Q(r,null,i,i.undirected,n);if(typeof t=="string")return Q(r,null,i,i[t],n)}const s=new fe;let o;if(e!=="undirected"){if(t!=="out"){if(o=Q(r,null,i,i.in,n),r&&o)return o;s.wrap(i.in)}if(t!=="in"){if(o=Q(r,s,i,i.out,n),r&&o)return o;s.wrap(i.out)}}if(e!=="directed"&&(o=Q(r,s,i,i.undirected,n),r&&o))return o}function vi(r,e,t){if(r!=="mixed"){if(r==="undirected")return Object.keys(t.undirected);if(typeof e=="string")return Object.keys(t[e])}const i=[];return Le(!1,r,e,t,function(n){i.push(n)}),i}function ee(r,e,t){const i=Object.keys(t),n=i.length;let s=0;return{[Symbol.iterator](){return this},next(){let o=null;do{if(s>=n)return r&&r.wrap(t),{done:!0};const a=t[i[s++]],d=a.source,h=a.target;if(o=d===e?h:d,r&&r.has(o.key)){o=null;continue}}while(o===null);return{done:!1,value:{neighbor:o.key,attributes:o.attributes}}}}}function xi(r,e,t){if(r!=="mixed"){if(r==="undirected")return ee(null,t,t.undirected);if(typeof e=="string")return ee(null,t,t[e])}let i=K();const n=new fe;return r!=="undirected"&&(e!=="out"&&(i=O(i,ee(n,t,t.in))),e!=="in"&&(i=O(i,ee(n,t,t.out)))),r!=="directed"&&(i=O(i,ee(n,t,t.undirected))),i}function _i(r,e){const{name:t,type:i,direction:n}=e;r.prototype[t]=function(s){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return[];s=""+s;const o=this._nodes.get(s);if(typeof o>"u")throw new y(`Graph.${t}: could not find the "${s}" node in the graph.`);return vi(i==="mixed"?this.type:i,n,o)}}function Ti(r,e){const{name:t,type:i,direction:n}=e,s="forEach"+t[0].toUpperCase()+t.slice(1,-1);r.prototype[s]=function(h,c){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return;h=""+h;const u=this._nodes.get(h);if(typeof u>"u")throw new y(`Graph.${s}: could not find the "${h}" node in the graph.`);Le(!1,i==="mixed"?this.type:i,n,u,c)};const o="map"+t[0].toUpperCase()+t.slice(1);r.prototype[o]=function(h,c){const u=[];return this[s](h,(l,g)=>{u.push(c(l,g))}),u};const a="filter"+t[0].toUpperCase()+t.slice(1);r.prototype[a]=function(h,c){const u=[];return this[s](h,(l,g)=>{c(l,g)&&u.push(l)}),u};const d="reduce"+t[0].toUpperCase()+t.slice(1);r.prototype[d]=function(h,c,u){if(arguments.length<3)throw new E(`Graph.${d}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`);let l=u;return this[s](h,(g,m)=>{l=c(l,g,m)}),l}}function Ci(r,e){const{name:t,type:i,direction:n}=e,s=t[0].toUpperCase()+t.slice(1,-1),o="find"+s;r.prototype[o]=function(h,c){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return;h=""+h;const u=this._nodes.get(h);if(typeof u>"u")throw new y(`Graph.${o}: could not find the "${h}" node in the graph.`);return Le(!0,i==="mixed"?this.type:i,n,u,c)};const a="some"+s;r.prototype[a]=function(h,c){return!!this[o](h,c)};const d="every"+s;r.prototype[d]=function(h,c){return!this[o](h,(l,g)=>!c(l,g))}}function Ai(r,e){const{name:t,type:i,direction:n}=e,s=t.slice(0,-1)+"Entries";r.prototype[s]=function(o){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return K();o=""+o;const a=this._nodes.get(o);if(typeof a>"u")throw new y(`Graph.${s}: could not find the "${o}" node in the graph.`);return xi(i==="mixed"?this.type:i,n,a)}}function Si(r){Ei.forEach(e=>{_i(r,e),Ti(r,e),Ci(r,e),Ai(r,e)})}function ae(r,e,t,i,n){const s=i._nodes.values(),o=i.type;let a,d,h,c,u,l;for(;a=s.next(),a.done!==!0;){let g=!1;if(d=a.value,o!=="undirected"){c=d.out;for(h in c){u=c[h];do l=u.target,g=!0,n(d.key,l.key,d.attributes,l.attributes,u.key,u.attributes,u.undirected),u=u.next;while(u)}}if(o!=="directed"){c=d.undirected;for(h in c)if(!(e&&d.key>h)){u=c[h];do l=u.target,l.key!==h&&(l=u.source),g=!0,n(d.key,l.key,d.attributes,l.attributes,u.key,u.attributes,u.undirected),u=u.next;while(u)}}t&&!g&&n(d.key,null,d.attributes,null,null,null,null)}}function Li(r,e){const t={key:r};return tt(e.attributes)||(t.attributes=G({},e.attributes)),t}function Di(r,e,t){const i={key:e,source:t.source.key,target:t.target.key};return tt(t.attributes)||(i.attributes=G({},t.attributes)),r==="mixed"&&t.undirected&&(i.undirected=!0),i}function Ri(r){if(!N(r))throw new E('Graph.import: invalid serialized node. A serialized node should be a plain object with at least a "key" property.');if(!("key"in r))throw new E("Graph.import: serialized node is missing its key.");if("attributes"in r&&(!N(r.attributes)||r.attributes===null))throw new E("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.")}function Gi(r){if(!N(r))throw new E('Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a "source" & "target" property.');if(!("source"in r))throw new E("Graph.import: serialized edge is missing its source.");if(!("target"in r))throw new E("Graph.import: serialized edge is missing its target.");if("attributes"in r&&(!N(r.attributes)||r.attributes===null))throw new E("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.");if("undirected"in r&&typeof r.undirected!="boolean")throw new E("Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.")}const Ni=Ft(),ki=new Set(["directed","undirected","mixed"]),Pe=new Set(["domain","_events","_eventsCount","_maxListeners"]),Fi=[{name:r=>`${r}Edge`,generateKey:!0},{name:r=>`${r}DirectedEdge`,generateKey:!0,type:"directed"},{name:r=>`${r}UndirectedEdge`,generateKey:!0,type:"undirected"},{name:r=>`${r}EdgeWithKey`},{name:r=>`${r}DirectedEdgeWithKey`,type:"directed"},{name:r=>`${r}UndirectedEdgeWithKey`,type:"undirected"}],Pi={allowSelfLoops:!0,multi:!1,type:"mixed"};function $i(r,e,t){if(t&&!N(t))throw new E(`Graph.addNode: invalid attributes. Expecting an object but got "${t}"`);if(e=""+e,t=t||{},r._nodes.has(e))throw new T(`Graph.addNode: the "${e}" node already exist in the graph.`);const i=new r.NodeDataClass(e,t);return r._nodes.set(e,i),r.emit("nodeAdded",{key:e,attributes:t}),i}function $e(r,e,t){const i=new r.NodeDataClass(e,t);return r._nodes.set(e,i),r.emit("nodeAdded",{key:e,attributes:t}),i}function dt(r,e,t,i,n,s,o,a){if(!i&&r.type==="undirected")throw new T(`Graph.${e}: you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.`);if(i&&r.type==="directed")throw new T(`Graph.${e}: you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.`);if(a&&!N(a))throw new E(`Graph.${e}: invalid attributes. Expecting an object but got "${a}"`);if(s=""+s,o=""+o,a=a||{},!r.allowSelfLoops&&s===o)throw new T(`Graph.${e}: source & target are the same ("${s}"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`);const d=r._nodes.get(s),h=r._nodes.get(o);if(!d)throw new y(`Graph.${e}: source node "${s}" not found.`);if(!h)throw new y(`Graph.${e}: target node "${o}" not found.`);const c={key:null,undirected:i,source:s,target:o,attributes:a};if(t)n=r._edgeKeyGenerator();else if(n=""+n,r._edges.has(n))throw new T(`Graph.${e}: the "${n}" edge already exists in the graph.`);if(!r.multi&&(i?typeof d.undirected[o]<"u":typeof d.out[o]<"u"))throw new T(`Graph.${e}: an edge linking "${s}" to "${o}" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.`);const u=new Z(i,n,d,h,a);r._edges.set(n,u);const l=s===o;return i?(d.undirectedDegree++,h.undirectedDegree++,l&&(d.undirectedLoops++,r._undirectedSelfLoopCount++)):(d.outDegree++,h.inDegree++,l&&(d.directedLoops++,r._directedSelfLoopCount++)),r.multi?u.attachMulti():u.attach(),i?r._undirectedSize++:r._directedSize++,c.key=n,r.emit("edgeAdded",c),n}function Ii(r,e,t,i,n,s,o,a,d){if(!i&&r.type==="undirected")throw new T(`Graph.${e}: you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead.`);if(i&&r.type==="directed")throw new T(`Graph.${e}: you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead.`);if(a){if(d){if(typeof a!="function")throw new E(`Graph.${e}: invalid updater function. Expecting a function but got "${a}"`)}else if(!N(a))throw new E(`Graph.${e}: invalid attributes. Expecting an object but got "${a}"`)}s=""+s,o=""+o;let h;if(d&&(h=a,a=void 0),!r.allowSelfLoops&&s===o)throw new T(`Graph.${e}: source & target are the same ("${s}"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`);let c=r._nodes.get(s),u=r._nodes.get(o),l,g;if(!t&&(l=r._edges.get(n),l)){if((l.source.key!==s||l.target.key!==o)&&(!i||l.source.key!==o||l.target.key!==s))throw new T(`Graph.${e}: inconsistency detected when attempting to merge the "${n}" edge with "${s}" source & "${o}" target vs. ("${l.source.key}", "${l.target.key}").`);g=l}if(!g&&!r.multi&&c&&(g=i?c.undirected[o]:c.out[o]),g){const C=[g.key,!1,!1,!1];if(d?!h:!a)return C;if(d){const S=g.attributes;g.attributes=h(S),r.emit("edgeAttributesUpdated",{type:"replace",key:g.key,attributes:g.attributes})}else G(g.attributes,a),r.emit("edgeAttributesUpdated",{type:"merge",key:g.key,attributes:g.attributes,data:a});return C}a=a||{},d&&h&&(a=h(a));const m={key:null,undirected:i,source:s,target:o,attributes:a};if(t)n=r._edgeKeyGenerator();else if(n=""+n,r._edges.has(n))throw new T(`Graph.${e}: the "${n}" edge already exists in the graph.`);let _=!1,v=!1;c||(c=$e(r,s,{}),_=!0,s===o&&(u=c,v=!0)),u||(u=$e(r,o,{}),v=!0),l=new Z(i,n,c,u,a),r._edges.set(n,l);const b=s===o;return i?(c.undirectedDegree++,u.undirectedDegree++,b&&(c.undirectedLoops++,r._undirectedSelfLoopCount++)):(c.outDegree++,u.inDegree++,b&&(c.directedLoops++,r._directedSelfLoopCount++)),r.multi?l.attachMulti():l.attach(),i?r._undirectedSize++:r._directedSize++,m.key=n,r.emit("edgeAdded",m),[n,!0,_,v]}function j(r,e){r._edges.delete(e.key);const{source:t,target:i,attributes:n}=e,s=e.undirected,o=t===i;s?(t.undirectedDegree--,i.undirectedDegree--,o&&(t.undirectedLoops--,r._undirectedSelfLoopCount--)):(t.outDegree--,i.inDegree--,o&&(t.directedLoops--,r._directedSelfLoopCount--)),r.multi?e.detachMulti():e.detach(),s?r._undirectedSize--:r._directedSize--,r.emit("edgeDropped",{key:e.key,attributes:n,source:t.key,target:i.key,undirected:s})}class D extends et.EventEmitter{constructor(e){if(super(),e=G({},Pi,e),typeof e.multi!="boolean")throw new E(`Graph.constructor: invalid 'multi' option. Expecting a boolean but got "${e.multi}".`);if(!ki.has(e.type))throw new E(`Graph.constructor: invalid 'type' option. Should be one of "mixed", "directed" or "undirected" but got "${e.type}".`);if(typeof e.allowSelfLoops!="boolean")throw new E(`Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got "${e.allowSelfLoops}".`);const t=e.type==="mixed"?it:e.type==="directed"?nt:rt;k(this,"NodeDataClass",t);const i="geid_"+Ni()+"_";let n=0;const s=()=>{let o;do o=i+n++;while(this._edges.has(o));return o};k(this,"_attributes",{}),k(this,"_nodes",new Map),k(this,"_edges",new Map),k(this,"_directedSize",0),k(this,"_undirectedSize",0),k(this,"_directedSelfLoopCount",0),k(this,"_undirectedSelfLoopCount",0),k(this,"_edgeKeyGenerator",s),k(this,"_options",e),Pe.forEach(o=>k(this,o,this[o])),$(this,"order",()=>this._nodes.size),$(this,"size",()=>this._edges.size),$(this,"directedSize",()=>this._directedSize),$(this,"undirectedSize",()=>this._undirectedSize),$(this,"selfLoopCount",()=>this._directedSelfLoopCount+this._undirectedSelfLoopCount),$(this,"directedSelfLoopCount",()=>this._directedSelfLoopCount),$(this,"undirectedSelfLoopCount",()=>this._undirectedSelfLoopCount),$(this,"multi",this._options.multi),$(this,"type",this._options.type),$(this,"allowSelfLoops",this._options.allowSelfLoops),$(this,"implementation",()=>"graphology")}_resetInstanceCounters(){this._directedSize=0,this._undirectedSize=0,this._directedSelfLoopCount=0,this._undirectedSelfLoopCount=0}hasNode(e){return this._nodes.has(""+e)}hasDirectedEdge(e,t){if(this.type==="undirected")return!1;if(arguments.length===1){const i=""+e,n=this._edges.get(i);return!!n&&!n.undirected}else if(arguments.length===2){e=""+e,t=""+t;const i=this._nodes.get(e);return i?i.out.hasOwnProperty(t):!1}throw new E(`Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}hasUndirectedEdge(e,t){if(this.type==="directed")return!1;if(arguments.length===1){const i=""+e,n=this._edges.get(i);return!!n&&n.undirected}else if(arguments.length===2){e=""+e,t=""+t;const i=this._nodes.get(e);return i?i.undirected.hasOwnProperty(t):!1}throw new E(`Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}hasEdge(e,t){if(arguments.length===1){const i=""+e;return this._edges.has(i)}else if(arguments.length===2){e=""+e,t=""+t;const i=this._nodes.get(e);return i?typeof i.out<"u"&&i.out.hasOwnProperty(t)||typeof i.undirected<"u"&&i.undirected.hasOwnProperty(t):!1}throw new E(`Graph.hasEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}directedEdge(e,t){if(this.type==="undirected")return;if(e=""+e,t=""+t,this.multi)throw new T("Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.");const i=this._nodes.get(e);if(!i)throw new y(`Graph.directedEdge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new y(`Graph.directedEdge: could not find the "${t}" target node in the graph.`);const n=i.out&&i.out[t]||void 0;if(n)return n.key}undirectedEdge(e,t){if(this.type==="directed")return;if(e=""+e,t=""+t,this.multi)throw new T("Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.");const i=this._nodes.get(e);if(!i)throw new y(`Graph.undirectedEdge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new y(`Graph.undirectedEdge: could not find the "${t}" target node in the graph.`);const n=i.undirected&&i.undirected[t]||void 0;if(n)return n.key}edge(e,t){if(this.multi)throw new T("Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.");e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new y(`Graph.edge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new y(`Graph.edge: could not find the "${t}" target node in the graph.`);const n=i.out&&i.out[t]||i.undirected&&i.undirected[t]||void 0;if(n)return n.key}areDirectedNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new y(`Graph.areDirectedNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in i.in||t in i.out}areOutNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new y(`Graph.areOutNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in i.out}areInNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new y(`Graph.areInNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in i.in}areUndirectedNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new y(`Graph.areUndirectedNeighbors: could not find the "${e}" node in the graph.`);return this.type==="directed"?!1:t in i.undirected}areNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new y(`Graph.areNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&(t in i.in||t in i.out)||this.type!=="directed"&&t in i.undirected}areInboundNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new y(`Graph.areInboundNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&t in i.in||this.type!=="directed"&&t in i.undirected}areOutboundNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new y(`Graph.areOutboundNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&t in i.out||this.type!=="directed"&&t in i.undirected}inDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.inDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree}outDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.outDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.outDegree}directedDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.directedDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree+t.outDegree}undirectedDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.undirectedDegree: could not find the "${e}" node in the graph.`);return this.type==="directed"?0:t.undirectedDegree}inboundDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.inboundDegree: could not find the "${e}" node in the graph.`);let i=0;return this.type!=="directed"&&(i+=t.undirectedDegree),this.type!=="undirected"&&(i+=t.inDegree),i}outboundDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.outboundDegree: could not find the "${e}" node in the graph.`);let i=0;return this.type!=="directed"&&(i+=t.undirectedDegree),this.type!=="undirected"&&(i+=t.outDegree),i}degree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.degree: could not find the "${e}" node in the graph.`);let i=0;return this.type!=="directed"&&(i+=t.undirectedDegree),this.type!=="undirected"&&(i+=t.inDegree+t.outDegree),i}inDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.inDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree-t.directedLoops}outDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.outDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.outDegree-t.directedLoops}directedDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.directedDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree+t.outDegree-t.directedLoops*2}undirectedDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.undirectedDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);return this.type==="directed"?0:t.undirectedDegree-t.undirectedLoops*2}inboundDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.inboundDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let i=0,n=0;return this.type!=="directed"&&(i+=t.undirectedDegree,n+=t.undirectedLoops*2),this.type!=="undirected"&&(i+=t.inDegree,n+=t.directedLoops),i-n}outboundDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.outboundDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let i=0,n=0;return this.type!=="directed"&&(i+=t.undirectedDegree,n+=t.undirectedLoops*2),this.type!=="undirected"&&(i+=t.outDegree,n+=t.directedLoops),i-n}degreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.degreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let i=0,n=0;return this.type!=="directed"&&(i+=t.undirectedDegree,n+=t.undirectedLoops*2),this.type!=="undirected"&&(i+=t.inDegree+t.outDegree,n+=t.directedLoops*2),i-n}source(e){e=""+e;const t=this._edges.get(e);if(!t)throw new y(`Graph.source: could not find the "${e}" edge in the graph.`);return t.source.key}target(e){e=""+e;const t=this._edges.get(e);if(!t)throw new y(`Graph.target: could not find the "${e}" edge in the graph.`);return t.target.key}extremities(e){e=""+e;const t=this._edges.get(e);if(!t)throw new y(`Graph.extremities: could not find the "${e}" edge in the graph.`);return[t.source.key,t.target.key]}opposite(e,t){e=""+e,t=""+t;const i=this._edges.get(t);if(!i)throw new y(`Graph.opposite: could not find the "${t}" edge in the graph.`);const n=i.source.key,s=i.target.key;if(e===n)return s;if(e===s)return n;throw new y(`Graph.opposite: the "${e}" node is not attached to the "${t}" edge (${n}, ${s}).`)}hasExtremity(e,t){e=""+e,t=""+t;const i=this._edges.get(e);if(!i)throw new y(`Graph.hasExtremity: could not find the "${e}" edge in the graph.`);return i.source.key===t||i.target.key===t}isUndirected(e){e=""+e;const t=this._edges.get(e);if(!t)throw new y(`Graph.isUndirected: could not find the "${e}" edge in the graph.`);return t.undirected}isDirected(e){e=""+e;const t=this._edges.get(e);if(!t)throw new y(`Graph.isDirected: could not find the "${e}" edge in the graph.`);return!t.undirected}isSelfLoop(e){e=""+e;const t=this._edges.get(e);if(!t)throw new y(`Graph.isSelfLoop: could not find the "${e}" edge in the graph.`);return t.source===t.target}addNode(e,t){return $i(this,e,t).key}mergeNode(e,t){if(t&&!N(t))throw new E(`Graph.mergeNode: invalid attributes. Expecting an object but got "${t}"`);e=""+e,t=t||{};let i=this._nodes.get(e);return i?(t&&(G(i.attributes,t),this.emit("nodeAttributesUpdated",{type:"merge",key:e,attributes:i.attributes,data:t})),[e,!1]):(i=new this.NodeDataClass(e,t),this._nodes.set(e,i),this.emit("nodeAdded",{key:e,attributes:t}),[e,!0])}updateNode(e,t){if(t&&typeof t!="function")throw new E(`Graph.updateNode: invalid updater function. Expecting a function but got "${t}"`);e=""+e;let i=this._nodes.get(e);if(i){if(t){const s=i.attributes;i.attributes=t(s),this.emit("nodeAttributesUpdated",{type:"replace",key:e,attributes:i.attributes})}return[e,!1]}const n=t?t({}):{};return i=new this.NodeDataClass(e,n),this._nodes.set(e,i),this.emit("nodeAdded",{key:e,attributes:n}),[e,!0]}dropNode(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new y(`Graph.dropNode: could not find the "${e}" node in the graph.`);let i;if(this.type!=="undirected"){for(const n in t.out){i=t.out[n];do j(this,i),i=i.next;while(i)}for(const n in t.in){i=t.in[n];do j(this,i),i=i.next;while(i)}}if(this.type!=="directed")for(const n in t.undirected){i=t.undirected[n];do j(this,i),i=i.next;while(i)}this._nodes.delete(e),this.emit("nodeDropped",{key:e,attributes:t.attributes})}dropEdge(e){let t;if(arguments.length>1){const i=""+arguments[0],n=""+arguments[1];if(t=F(this,i,n,this.type),!t)throw new y(`Graph.dropEdge: could not find the "${i}" -> "${n}" edge in the graph.`)}else if(e=""+e,t=this._edges.get(e),!t)throw new y(`Graph.dropEdge: could not find the "${e}" edge in the graph.`);return j(this,t),this}dropDirectedEdge(e,t){if(arguments.length<2)throw new T("Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new T("Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");e=""+e,t=""+t;const i=F(this,e,t,"directed");if(!i)throw new y(`Graph.dropDirectedEdge: could not find a "${e}" -> "${t}" edge in the graph.`);return j(this,i),this}dropUndirectedEdge(e,t){if(arguments.length<2)throw new T("Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new T("Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");const i=F(this,e,t,"undirected");if(!i)throw new y(`Graph.dropUndirectedEdge: could not find a "${e}" -> "${t}" edge in the graph.`);return j(this,i),this}clear(){this._edges.clear(),this._nodes.clear(),this._resetInstanceCounters(),this.emit("cleared")}clearEdges(){const e=this._nodes.values();let t;for(;t=e.next(),t.done!==!0;)t.value.clear();this._edges.clear(),this._resetInstanceCounters(),this.emit("edgesCleared")}getAttribute(e){return this._attributes[e]}getAttributes(){return this._attributes}hasAttribute(e){return this._attributes.hasOwnProperty(e)}setAttribute(e,t){return this._attributes[e]=t,this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:e}),this}updateAttribute(e,t){if(typeof t!="function")throw new E("Graph.updateAttribute: updater should be a function.");const i=this._attributes[e];return this._attributes[e]=t(i),this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:e}),this}removeAttribute(e){return delete this._attributes[e],this.emit("attributesUpdated",{type:"remove",attributes:this._attributes,name:e}),this}replaceAttributes(e){if(!N(e))throw new E("Graph.replaceAttributes: provided attributes are not a plain object.");return this._attributes=e,this.emit("attributesUpdated",{type:"replace",attributes:this._attributes}),this}mergeAttributes(e){if(!N(e))throw new E("Graph.mergeAttributes: provided attributes are not a plain object.");return G(this._attributes,e),this.emit("attributesUpdated",{type:"merge",attributes:this._attributes,data:e}),this}updateAttributes(e){if(typeof e!="function")throw new E("Graph.updateAttributes: provided updater is not a function.");return this._attributes=e(this._attributes),this.emit("attributesUpdated",{type:"update",attributes:this._attributes}),this}updateEachNodeAttributes(e,t){if(typeof e!="function")throw new E("Graph.updateEachNodeAttributes: expecting an updater function.");if(t&&!Fe(t))throw new E("Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");const i=this._nodes.values();let n,s;for(;n=i.next(),n.done!==!0;)s=n.value,s.attributes=e(s.key,s.attributes);this.emit("eachNodeAttributesUpdated",{hints:t||null})}updateEachEdgeAttributes(e,t){if(typeof e!="function")throw new E("Graph.updateEachEdgeAttributes: expecting an updater function.");if(t&&!Fe(t))throw new E("Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");const i=this._edges.values();let n,s,o,a;for(;n=i.next(),n.done!==!0;)s=n.value,o=s.source,a=s.target,s.attributes=e(s.key,s.attributes,o.key,a.key,o.attributes,a.attributes,s.undirected);this.emit("eachEdgeAttributesUpdated",{hints:t||null})}forEachAdjacencyEntry(e){if(typeof e!="function")throw new E("Graph.forEachAdjacencyEntry: expecting a callback.");ae(!1,!1,!1,this,e)}forEachAdjacencyEntryWithOrphans(e){if(typeof e!="function")throw new E("Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.");ae(!1,!1,!0,this,e)}forEachAssymetricAdjacencyEntry(e){if(typeof e!="function")throw new E("Graph.forEachAssymetricAdjacencyEntry: expecting a callback.");ae(!1,!0,!1,this,e)}forEachAssymetricAdjacencyEntryWithOrphans(e){if(typeof e!="function")throw new E("Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.");ae(!1,!0,!0,this,e)}nodes(){return Array.from(this._nodes.keys())}forEachNode(e){if(typeof e!="function")throw new E("Graph.forEachNode: expecting a callback.");const t=this._nodes.values();let i,n;for(;i=t.next(),i.done!==!0;)n=i.value,e(n.key,n.attributes)}findNode(e){if(typeof e!="function")throw new E("Graph.findNode: expecting a callback.");const t=this._nodes.values();let i,n;for(;i=t.next(),i.done!==!0;)if(n=i.value,e(n.key,n.attributes))return n.key}mapNodes(e){if(typeof e!="function")throw new E("Graph.mapNode: expecting a callback.");const t=this._nodes.values();let i,n;const s=new Array(this.order);let o=0;for(;i=t.next(),i.done!==!0;)n=i.value,s[o++]=e(n.key,n.attributes);return s}someNode(e){if(typeof e!="function")throw new E("Graph.someNode: expecting a callback.");const t=this._nodes.values();let i,n;for(;i=t.next(),i.done!==!0;)if(n=i.value,e(n.key,n.attributes))return!0;return!1}everyNode(e){if(typeof e!="function")throw new E("Graph.everyNode: expecting a callback.");const t=this._nodes.values();let i,n;for(;i=t.next(),i.done!==!0;)if(n=i.value,!e(n.key,n.attributes))return!1;return!0}filterNodes(e){if(typeof e!="function")throw new E("Graph.filterNodes: expecting a callback.");const t=this._nodes.values();let i,n;const s=[];for(;i=t.next(),i.done!==!0;)n=i.value,e(n.key,n.attributes)&&s.push(n.key);return s}reduceNodes(e,t){if(typeof e!="function")throw new E("Graph.reduceNodes: expecting a callback.");if(arguments.length<2)throw new E("Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.");let i=t;const n=this._nodes.values();let s,o;for(;s=n.next(),s.done!==!0;)o=s.value,i=e(i,o.key,o.attributes);return i}nodeEntries(){const e=this._nodes.values();return{[Symbol.iterator](){return this},next(){const t=e.next();if(t.done)return t;const i=t.value;return{value:{node:i.key,attributes:i.attributes},done:!1}}}}export(){const e=new Array(this._nodes.size);let t=0;this._nodes.forEach((n,s)=>{e[t++]=Li(s,n)});const i=new Array(this._edges.size);return t=0,this._edges.forEach((n,s)=>{i[t++]=Di(this.type,s,n)}),{options:{type:this.type,multi:this.multi,allowSelfLoops:this.allowSelfLoops},attributes:this.getAttributes(),nodes:e,edges:i}}import(e,t=!1){if(e instanceof D)return e.forEachNode((d,h)=>{t?this.mergeNode(d,h):this.addNode(d,h)}),e.forEachEdge((d,h,c,u,l,g,m)=>{t?m?this.mergeUndirectedEdgeWithKey(d,c,u,h):this.mergeDirectedEdgeWithKey(d,c,u,h):m?this.addUndirectedEdgeWithKey(d,c,u,h):this.addDirectedEdgeWithKey(d,c,u,h)}),this;if(!N(e))throw new E("Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.");if(e.attributes){if(!N(e.attributes))throw new E("Graph.import: invalid attributes. Expecting a plain object.");t?this.mergeAttributes(e.attributes):this.replaceAttributes(e.attributes)}let i,n,s,o,a;if(e.nodes){if(s=e.nodes,!Array.isArray(s))throw new E("Graph.import: invalid nodes. Expecting an array.");for(i=0,n=s.length;i<n;i++){o=s[i],Ri(o);const{key:d,attributes:h}=o;t?this.mergeNode(d,h):this.addNode(d,h)}}if(e.edges){let d=!1;if(this.type==="undirected"&&(d=!0),s=e.edges,!Array.isArray(s))throw new E("Graph.import: invalid edges. Expecting an array.");for(i=0,n=s.length;i<n;i++){a=s[i],Gi(a);const{source:h,target:c,attributes:u,undirected:l=d}=a;let g;"key"in a?(g=t?l?this.mergeUndirectedEdgeWithKey:this.mergeDirectedEdgeWithKey:l?this.addUndirectedEdgeWithKey:this.addDirectedEdgeWithKey,g.call(this,a.key,h,c,u)):(g=t?l?this.mergeUndirectedEdge:this.mergeDirectedEdge:l?this.addUndirectedEdge:this.addDirectedEdge,g.call(this,h,c,u))}}return this}nullCopy(e){const t=new D(G({},this._options,e));return t.replaceAttributes(G({},this.getAttributes())),t}emptyCopy(e){const t=this.nullCopy(e);return this._nodes.forEach((i,n)=>{const s=G({},i.attributes);i=new t.NodeDataClass(n,s),t._nodes.set(n,i)}),t}copy(e){if(e=e||{},typeof e.type=="string"&&e.type!==this.type&&e.type!=="mixed")throw new T(`Graph.copy: cannot create an incompatible copy from "${this.type}" type to "${e.type}" because this would mean losing information about the current graph.`);if(typeof e.multi=="boolean"&&e.multi!==this.multi&&e.multi!==!0)throw new T("Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.");if(typeof e.allowSelfLoops=="boolean"&&e.allowSelfLoops!==this.allowSelfLoops&&e.allowSelfLoops!==!0)throw new T("Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.");const t=this.emptyCopy(e),i=this._edges.values();let n,s;for(;n=i.next(),n.done!==!0;)s=n.value,dt(t,"copy",!1,s.undirected,s.key,s.source.key,s.target.key,G({},s.attributes));return t}toJSON(){return this.export()}toString(){return"[object Graph]"}inspect(){const e={};this._nodes.forEach((s,o)=>{e[o]=s.attributes});const t={},i={};this._edges.forEach((s,o)=>{const a=s.undirected?"--":"->";let d="",h=s.source.key,c=s.target.key,u;s.undirected&&h>c&&(u=h,h=c,c=u);const l=`(${h})${a}(${c})`;o.startsWith("geid_")?this.multi&&(typeof i[l]>"u"?i[l]=0:i[l]++,d+=`${i[l]}. `):d+=`[${o}]: `,d+=l,t[d]=s.attributes});const n={};for(const s in this)this.hasOwnProperty(s)&&!Pe.has(s)&&typeof this[s]!="function"&&typeof s!="symbol"&&(n[s]=this[s]);return n.attributes=this._attributes,n.nodes=e,n.edges=t,k(n,"constructor",this.constructor),n}}typeof Symbol<"u"&&(D.prototype[Symbol.for("nodejs.util.inspect.custom")]=D.prototype.inspect);Fi.forEach(r=>{["add","merge","update"].forEach(e=>{const t=r.name(e),i=e==="add"?dt:Ii;r.generateKey?D.prototype[t]=function(n,s,o){return i(this,t,!0,(r.type||this.type)==="undirected",null,n,s,o,e==="update")}:D.prototype[t]=function(n,s,o,a){return i(this,t,!1,(r.type||this.type)==="undirected",n,s,o,a,e==="update")}})});jt(D);ni(D);bi(D);Si(D);class ut extends D{constructor(e){const t=G({type:"directed"},e);if("multi"in t&&t.multi!==!1)throw new E("DirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if(t.type!=="directed")throw new E('DirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class ct extends D{constructor(e){const t=G({type:"undirected"},e);if("multi"in t&&t.multi!==!1)throw new E("UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if(t.type!=="undirected")throw new E('UndirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class lt extends D{constructor(e){const t=G({multi:!0},e);if("multi"in t&&t.multi!==!0)throw new E("MultiGraph.from: inconsistent indication that the graph should be simple in given options!");super(t)}}class ft extends D{constructor(e){const t=G({type:"directed",multi:!0},e);if("multi"in t&&t.multi!==!0)throw new E("MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if(t.type!=="directed")throw new E('MultiDirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class gt extends D{constructor(e){const t=G({type:"undirected",multi:!0},e);if("multi"in t&&t.multi!==!0)throw new E("MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if(t.type!=="undirected")throw new E('MultiUndirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}function q(r){r.from=function(e,t){const i=G({},e.options,t),n=new r(i);return n.import(e),n}}q(D);q(ut);q(ct);q(lt);q(ft);q(gt);D.Graph=D;D.DirectedGraph=ut;D.UndirectedGraph=ct;D.MultiGraph=lt;D.MultiDirectedGraph=ft;D.MultiUndirectedGraph=gt;D.InvalidArgumentsGraphError=E;D.NotFoundGraphError=y;D.UsageGraphError=T;var me,Ie;function Mi(){return Ie||(Ie=1,me=function(e){return e!==null&&typeof e=="object"&&typeof e.addUndirectedEdgeWithKey=="function"&&typeof e.dropNode=="function"&&typeof e.multi=="boolean"}),me}class De extends et.EventEmitter{constructor(){super(),this.rawEmitter=this}}const Ui=r=>r,zi=r=>r*r,Oi=r=>r*(2-r),Bi=r=>(r*=2)<1?.5*r*r:-.5*(--r*(r-2)-1),Hi=r=>r*r*r,Wi=r=>--r*r*r+1,Vi=r=>(r*=2)<1?.5*r*r*r:.5*((r-=2)*r*r+2),pt={linear:Ui,quadraticIn:zi,quadraticOut:Oi,quadraticInOut:Bi,cubicIn:Hi,cubicOut:Wi,cubicInOut:Vi},mt={easing:"quadraticInOut",duration:150};function Vn(r,e,t,i){const n=Object.assign({},mt,t),s=typeof n.easing=="function"?n.easing:pt[n.easing],o=Date.now(),a={};for(const c in e){const u=e[c];a[c]={};for(const l in u)a[c][l]=r.getNodeAttribute(c,l)}let d=null;const h=()=>{d=null;let c=(Date.now()-o)/n.duration;if(c>=1){for(const u in e){const l=e[u];for(const g in l)r.setNodeAttribute(u,g,l[g])}return}c=s(c);for(const u in e){const l=e[u],g=a[u];for(const m in l)r.setNodeAttribute(u,m,l[m]*c+g[m]*(1-c))}d=requestAnimationFrame(h)};return h(),()=>{d&&cancelAnimationFrame(d)}}const ye={black:"#000000",silver:"#C0C0C0",gray:"#808080",grey:"#808080",white:"#FFFFFF",maroon:"#800000",red:"#FF0000",purple:"#800080",fuchsia:"#FF00FF",green:"#008000",lime:"#00FF00",olive:"#808000",yellow:"#FFFF00",navy:"#000080",blue:"#0000FF",teal:"#008080",aqua:"#00FFFF",darkblue:"#00008B",mediumblue:"#0000CD",darkgreen:"#006400",darkcyan:"#008B8B",deepskyblue:"#00BFFF",darkturquoise:"#00CED1",mediumspringgreen:"#00FA9A",springgreen:"#00FF7F",cyan:"#00FFFF",midnightblue:"#191970",dodgerblue:"#1E90FF",lightseagreen:"#20B2AA",forestgreen:"#228B22",seagreen:"#2E8B57",darkslategray:"#2F4F4F",darkslategrey:"#2F4F4F",limegreen:"#32CD32",mediumseagreen:"#3CB371",turquoise:"#40E0D0",royalblue:"#4169E1",steelblue:"#4682B4",darkslateblue:"#483D8B",mediumturquoise:"#48D1CC",indigo:"#4B0082",darkolivegreen:"#556B2F",cadetblue:"#5F9EA0",cornflowerblue:"#6495ED",rebeccapurple:"#663399",mediumaquamarine:"#66CDAA",dimgray:"#696969",dimgrey:"#696969",slateblue:"#6A5ACD",olivedrab:"#6B8E23",slategray:"#708090",slategrey:"#708090",lightslategray:"#778899",lightslategrey:"#778899",mediumslateblue:"#7B68EE",lawngreen:"#7CFC00",chartreuse:"#7FFF00",aquamarine:"#7FFFD4",skyblue:"#87CEEB",lightskyblue:"#87CEFA",blueviolet:"#8A2BE2",darkred:"#8B0000",darkmagenta:"#8B008B",saddlebrown:"#8B4513",darkseagreen:"#8FBC8F",lightgreen:"#90EE90",mediumpurple:"#9370DB",darkviolet:"#9400D3",palegreen:"#98FB98",darkorchid:"#9932CC",yellowgreen:"#9ACD32",sienna:"#A0522D",brown:"#A52A2A",darkgray:"#A9A9A9",darkgrey:"#A9A9A9",lightblue:"#ADD8E6",greenyellow:"#ADFF2F",paleturquoise:"#AFEEEE",lightsteelblue:"#B0C4DE",powderblue:"#B0E0E6",firebrick:"#B22222",darkgoldenrod:"#B8860B",mediumorchid:"#BA55D3",rosybrown:"#BC8F8F",darkkhaki:"#BDB76B",mediumvioletred:"#C71585",indianred:"#CD5C5C",peru:"#CD853F",chocolate:"#D2691E",tan:"#D2B48C",lightgray:"#D3D3D3",lightgrey:"#D3D3D3",thistle:"#D8BFD8",orchid:"#DA70D6",goldenrod:"#DAA520",palevioletred:"#DB7093",crimson:"#DC143C",gainsboro:"#DCDCDC",plum:"#DDA0DD",burlywood:"#DEB887",lightcyan:"#E0FFFF",lavender:"#E6E6FA",darksalmon:"#E9967A",violet:"#EE82EE",palegoldenrod:"#EEE8AA",lightcoral:"#F08080",khaki:"#F0E68C",aliceblue:"#F0F8FF",honeydew:"#F0FFF0",azure:"#F0FFFF",sandybrown:"#F4A460",wheat:"#F5DEB3",beige:"#F5F5DC",whitesmoke:"#F5F5F5",mintcream:"#F5FFFA",ghostwhite:"#F8F8FF",salmon:"#FA8072",antiquewhite:"#FAEBD7",linen:"#FAF0E6",lightgoldenrodyellow:"#FAFAD2",oldlace:"#FDF5E6",magenta:"#FF00FF",deeppink:"#FF1493",orangered:"#FF4500",tomato:"#FF6347",hotpink:"#FF69B4",coral:"#FF7F50",darkorange:"#FF8C00",lightsalmon:"#FFA07A",orange:"#FFA500",lightpink:"#FFB6C1",pink:"#FFC0CB",gold:"#FFD700",peachpuff:"#FFDAB9",navajowhite:"#FFDEAD",moccasin:"#FFE4B5",bisque:"#FFE4C4",mistyrose:"#FFE4E1",blanchedalmond:"#FFEBCD",papayawhip:"#FFEFD5",lavenderblush:"#FFF0F5",seashell:"#FFF5EE",cornsilk:"#FFF8DC",lemonchiffon:"#FFFACD",floralwhite:"#FFFAF0",snow:"#FFFAFA",lightyellow:"#FFFFE0",ivory:"#FFFFF0"},yt=new Int8Array(4),ce=new Int32Array(yt.buffer,0,1),wt=new Float32Array(yt.buffer,0,1),ji=/^\s*rgba?\s*\(/,Yi=/^\s*rgba?\s*\(\s*([0-9]*)\s*,\s*([0-9]*)\s*,\s*([0-9]*)(?:\s*,\s*(.*)?)?\)\s*$/;function Ki(r){let e=0,t=0,i=0,n=1;if(r[0]==="#")r.length===4?(e=parseInt(r.charAt(1)+r.charAt(1),16),t=parseInt(r.charAt(2)+r.charAt(2),16),i=parseInt(r.charAt(3)+r.charAt(3),16)):(e=parseInt(r.charAt(1)+r.charAt(2),16),t=parseInt(r.charAt(3)+r.charAt(4),16),i=parseInt(r.charAt(5)+r.charAt(6),16)),r.length===9&&(n=parseInt(r.charAt(7)+r.charAt(8),16)/255);else if(ji.test(r)){const s=r.match(Yi);s&&(e=+s[1],t=+s[2],i=+s[3],s[4]&&(n=+s[4]))}return{r:e,g:t,b:i,a:n}}const Y={};for(const r in ye)Y[r]=X(ye[r]),Y[ye[r]]=Y[r];function bt(r,e,t,i,n){return ce[0]=i<<24|t<<16|e<<8|r,ce[0]=ce[0]&4278190079,wt[0]}function X(r){if(r=r.toLowerCase(),typeof Y[r]<"u")return Y[r];const e=Ki(r),{r:t,g:i,b:n}=e;let{a:s}=e;s=s*255|0;const o=bt(t,i,n,s);return Y[r]=o,o}function jn(r,e){wt[0]=X(r);let t=ce[0];const i=t&255,n=t>>8&255,s=t>>16&255,o=t>>24&255;return[i,n,s,o]}const we={};function Et(r){if(typeof we[r]<"u")return we[r];const e=(r&16711680)>>>16,t=(r&65280)>>>8,i=r&255,s=bt(e,t,i,255);return we[r]=s,s}function Me(r,e,t,i){return t+(e<<8)+(r<<16)}function Ue(r,e,t,i,n,s){const o=Math.floor(t/s*n),a=Math.floor(r.drawingBufferHeight/s-i/s*n),d=new Uint8Array(4);r.bindFramebuffer(r.FRAMEBUFFER,e),r.readPixels(o,a,1,1,r.RGBA,r.UNSIGNED_BYTE,d);const[h,c,u,l]=d;return[h,c,u,l]}function I(){return Float32Array.of(1,0,0,0,1,0,0,0,1)}function he(r,e,t){return r[0]=e,r[4]=typeof t=="number"?t:e,r}function ze(r,e){const t=Math.sin(e),i=Math.cos(e);return r[0]=i,r[1]=t,r[3]=-t,r[4]=i,r}function Oe(r,e,t){return r[6]=e,r[7]=t,r}function H(r,e){const t=r[0],i=r[1],n=r[2],s=r[3],o=r[4],a=r[5],d=r[6],h=r[7],c=r[8],u=e[0],l=e[1],g=e[2],m=e[3],_=e[4],v=e[5],b=e[6],C=e[7],S=e[8];return r[0]=u*t+l*s+g*d,r[1]=u*i+l*o+g*h,r[2]=u*n+l*a+g*c,r[3]=m*t+_*s+v*d,r[4]=m*i+_*o+v*h,r[5]=m*n+_*a+v*c,r[6]=b*t+C*s+S*d,r[7]=b*i+C*o+S*h,r[8]=b*n+C*a+S*c,r}function _e(r,e,t=1){const i=r[0],n=r[1],s=r[3],o=r[4],a=r[6],d=r[7],h=e.x,c=e.y;return{x:h*i+c*s+a*t,y:h*n+c*o+d*t}}function Zi(r,e){const t=r.height/r.width,i=e.height/e.width;return t<1&&i>1||t>1&&i<1?1:Math.min(Math.max(i,1/i),Math.max(1/t,t))}function te(r,e,t,i,n){const{angle:s,ratio:o,x:a,y:d}=r,{width:h,height:c}=e,u=I(),l=Math.min(h,c)-2*i,g=Zi(e,t);return n?(H(u,Oe(I(),a,d)),H(u,he(I(),o)),H(u,ze(I(),s)),H(u,he(I(),h/l/2/g,c/l/2/g))):(H(u,he(I(),2*(l/h)*g,2*(l/c)*g)),H(u,ze(I(),-s)),H(u,he(I(),1/o)),H(u,Oe(I(),-a,-d))),u}function qi(r,e,t){const{x:i,y:n}=_e(r,{x:Math.cos(e.angle),y:Math.sin(e.angle)},0);return 1/Math.sqrt(Math.pow(i,2)+Math.pow(n,2))/t.width}function Be(r,e){const t=e.size;if(t===0)return;const i=r.length;r.length+=t;let n=0;e.forEach(s=>{r[i+n]=s,n++})}function be(r,...e){r=r||{};for(let t=0,i=e.length;t<i;t++){const n=e[t];n&&Object.assign(r,n)}return r}var Xi=Mi();const Ji=Rt(Xi);function Qi(r){if(!r.order)return{x:[0,1],y:[0,1]};let e=1/0,t=-1/0,i=1/0,n=-1/0;return r.forEachNode((s,o)=>{const{x:a,y:d}=o;a<e&&(e=a),a>t&&(t=a),d<i&&(i=d),d>n&&(n=d)}),{x:[e,t],y:[i,n]}}function en(r){if(!Ji(r))throw new Error("Sigma: invalid graph instance.");r.forEachNode((e,t)=>{if(!Number.isFinite(t.x)||!Number.isFinite(t.y))throw new Error(`Sigma: Coordinates of node ${e} are invalid. A node must have a numeric 'x' and 'y' attribute.`)})}function tn(r,e,t){const i=document.createElement(r);if(e)for(const n in e)i.style[n]=e[n];if(t)for(const n in t)i.setAttribute(n,t[n]);return i}function He(){return typeof window.devicePixelRatio<"u"?window.devicePixelRatio:1}function We(r,e,t){return t.sort(function(i,n){const s=e(i)||0,o=e(n)||0;return s<o?-1:s>o?1:0})}function Ve(r){const{x:[e,t],y:[i,n]}=r;let s=Math.max(t-e,n-i),o=(t+e)/2,a=(n+i)/2;(s===0||Math.abs(s)===1/0||isNaN(s))&&(s=1),isNaN(o)&&(o=0),isNaN(a)&&(a=0);const d=h=>({x:.5+(h.x-o)/s,y:.5+(h.y-a)/s});return d.applyTo=h=>{h.x=.5+(h.x-o)/s,h.y=.5+(h.y-a)/s},d.inverse=h=>({x:o+s*(h.x-.5),y:a+s*(h.y-.5)}),d.ratio=s,d}const de=1.5;class se extends De{constructor(){super(),this.x=.5,this.y=.5,this.angle=0,this.ratio=1,this.minRatio=null,this.maxRatio=null,this.enabledZooming=!0,this.enabledPanning=!0,this.enabledRotation=!0,this.clean=null,this.nextFrame=null,this.previousState=null,this.enabled=!0,this.previousState=this.getState()}static from(e){return new se().setState(e)}enable(){return this.enabled=!0,this}disable(){return this.enabled=!1,this}getState(){return{x:this.x,y:this.y,angle:this.angle,ratio:this.ratio}}hasState(e){return this.x===e.x&&this.y===e.y&&this.ratio===e.ratio&&this.angle===e.angle}getPreviousState(){const e=this.previousState;return e?{x:e.x,y:e.y,angle:e.angle,ratio:e.ratio}:null}getBoundedRatio(e){let t=e;return typeof this.minRatio=="number"&&(t=Math.max(t,this.minRatio)),typeof this.maxRatio=="number"&&(t=Math.min(t,this.maxRatio)),t}validateState(e){const t={};return this.enabledPanning&&typeof e.x=="number"&&(t.x=e.x),this.enabledPanning&&typeof e.y=="number"&&(t.y=e.y),this.enabledZooming&&typeof e.ratio=="number"&&(t.ratio=this.getBoundedRatio(e.ratio)),this.enabledRotation&&typeof e.angle=="number"&&(t.angle=e.angle),this.clean?this.clean({...this.getState(),...t}):t}isAnimated(){return!!this.nextFrame}setState(e){if(!this.enabled)return this;this.previousState=this.getState();const t=this.validateState(e);return typeof t.x=="number"&&(this.x=t.x),typeof t.y=="number"&&(this.y=t.y),typeof t.ratio=="number"&&(this.ratio=t.ratio),typeof t.angle=="number"&&(this.angle=t.angle),this.hasState(this.previousState)||this.emit("updated",this.getState()),this}updateState(e){return this.setState(e(this.getState())),this}animate(e,t={},i){if(!i)return new Promise(c=>this.animate(e,t,c));if(!this.enabled)return;const n={...mt,...t},s=this.validateState(e),o=typeof n.easing=="function"?n.easing:pt[n.easing],a=Date.now(),d=this.getState(),h=()=>{const c=(Date.now()-a)/n.duration;if(c>=1){this.nextFrame=null,this.setState(s),this.animationCallback&&(this.animationCallback.call(null),this.animationCallback=void 0);return}const u=o(c),l={};typeof s.x=="number"&&(l.x=d.x+(s.x-d.x)*u),typeof s.y=="number"&&(l.y=d.y+(s.y-d.y)*u),this.enabledRotation&&typeof s.angle=="number"&&(l.angle=d.angle+(s.angle-d.angle)*u),typeof s.ratio=="number"&&(l.ratio=d.ratio+(s.ratio-d.ratio)*u),this.setState(l),this.nextFrame=requestAnimationFrame(h)};this.nextFrame?(cancelAnimationFrame(this.nextFrame),this.animationCallback&&this.animationCallback.call(null),this.nextFrame=requestAnimationFrame(h)):h(),this.animationCallback=i}animatedZoom(e){return e?typeof e=="number"?this.animate({ratio:this.ratio/e}):this.animate({ratio:this.ratio/(e.factor||de)},e):this.animate({ratio:this.ratio/de})}animatedUnzoom(e){return e?typeof e=="number"?this.animate({ratio:this.ratio*e}):this.animate({ratio:this.ratio*(e.factor||de)},e):this.animate({ratio:this.ratio*de})}animatedReset(e){return this.animate({x:.5,y:.5,ratio:1,angle:0},e)}copy(){return se.from(this.getState())}}function nn(r){return r.normalized?1:r.size}function Ee(r){let e=0;return r.forEach(t=>e+=nn(t)),e}function vt(r,e,t){const i=r==="VERTEX"?e.VERTEX_SHADER:e.FRAGMENT_SHADER,n=e.createShader(i);if(n===null)throw new Error("loadShader: error while creating the shader");if(e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS)){const o=e.getShaderInfoLog(n);throw e.deleteShader(n),new Error(`loadShader: error while compiling the shader:
${o}
${t}`)}return n}function rn(r,e){return vt("VERTEX",r,e)}function sn(r,e){return vt("FRAGMENT",r,e)}function on(r,e){const t=r.createProgram();if(t===null)throw new Error("loadProgram: error while creating the program.");let i,n;for(i=0,n=e.length;i<n;i++)r.attachShader(t,e[i]);if(r.linkProgram(t),!r.getProgramParameter(t,r.LINK_STATUS))throw r.deleteProgram(t),new Error("loadProgram: error while linking the program.");return t}function je({gl:r,buffer:e,program:t,vertexShader:i,fragmentShader:n}){r.deleteShader(i),r.deleteShader(n),r.deleteProgram(t),r.deleteBuffer(e)}function Yn(r){return r%1===0?r.toFixed(1):r.toString()}const Ye=`#define PICKING_MODE
`,an={[WebGL2RenderingContext.BOOL]:1,[WebGL2RenderingContext.BYTE]:1,[WebGL2RenderingContext.UNSIGNED_BYTE]:1,[WebGL2RenderingContext.SHORT]:2,[WebGL2RenderingContext.UNSIGNED_SHORT]:2,[WebGL2RenderingContext.INT]:4,[WebGL2RenderingContext.UNSIGNED_INT]:4,[WebGL2RenderingContext.FLOAT]:4};class xt{constructor(e,t,i){this.array=new Float32Array,this.constantArray=new Float32Array,this.capacity=0,this.verticesCount=0;const n=this.getDefinition();if(this.VERTICES=n.VERTICES,this.VERTEX_SHADER_SOURCE=n.VERTEX_SHADER_SOURCE,this.FRAGMENT_SHADER_SOURCE=n.FRAGMENT_SHADER_SOURCE,this.UNIFORMS=n.UNIFORMS,this.ATTRIBUTES=n.ATTRIBUTES,this.METHOD=n.METHOD,this.CONSTANT_ATTRIBUTES="CONSTANT_ATTRIBUTES"in n?n.CONSTANT_ATTRIBUTES:[],this.CONSTANT_DATA="CONSTANT_DATA"in n?n.CONSTANT_DATA:[],this.isInstanced="CONSTANT_ATTRIBUTES"in n,this.ATTRIBUTES_ITEMS_COUNT=Ee(this.ATTRIBUTES),this.STRIDE=this.VERTICES*this.ATTRIBUTES_ITEMS_COUNT,this.renderer=i,this.normalProgram=this.getProgramInfo("normal",e,n.VERTEX_SHADER_SOURCE,n.FRAGMENT_SHADER_SOURCE,null),this.pickProgram=t?this.getProgramInfo("pick",e,Ye+n.VERTEX_SHADER_SOURCE,Ye+n.FRAGMENT_SHADER_SOURCE,t):null,this.isInstanced){const s=Ee(this.CONSTANT_ATTRIBUTES);if(this.CONSTANT_DATA.length!==this.VERTICES)throw new Error(`Program: error while getting constant data (expected ${this.VERTICES} items, received ${this.CONSTANT_DATA.length} instead)`);this.constantArray=new Float32Array(this.CONSTANT_DATA.length*s);for(let o=0;o<this.CONSTANT_DATA.length;o++){const a=this.CONSTANT_DATA[o];if(a.length!==s)throw new Error(`Program: error while getting constant data (one vector has ${a.length} items instead of ${s})`);for(let d=0;d<a.length;d++)this.constantArray[o*s+d]=a[d]}this.STRIDE=this.ATTRIBUTES_ITEMS_COUNT}}kill(){je(this.normalProgram),this.pickProgram&&(je(this.pickProgram),this.pickProgram=null)}getProgramInfo(e,t,i,n,s){const o=this.getDefinition(),a=t.createBuffer();if(a===null)throw new Error("Program: error while creating the WebGL buffer.");const d=rn(t,i),h=sn(t,n),c=on(t,[d,h]),u={};o.UNIFORMS.forEach(m=>{const _=t.getUniformLocation(c,m);_&&(u[m]=_)});const l={};o.ATTRIBUTES.forEach(m=>{l[m.name]=t.getAttribLocation(c,m.name)});let g;if("CONSTANT_ATTRIBUTES"in o&&(o.CONSTANT_ATTRIBUTES.forEach(m=>{l[m.name]=t.getAttribLocation(c,m.name)}),g=t.createBuffer(),g===null))throw new Error("Program: error while creating the WebGL constant buffer.");return{name:e,program:c,gl:t,frameBuffer:s,buffer:a,constantBuffer:g||{},uniformLocations:u,attributeLocations:l,isPicking:e==="pick",vertexShader:d,fragmentShader:h}}bindProgram(e){let t=0;const{gl:i,buffer:n}=e;this.isInstanced?(i.bindBuffer(i.ARRAY_BUFFER,e.constantBuffer),t=0,this.CONSTANT_ATTRIBUTES.forEach(s=>t+=this.bindAttribute(s,e,t,!1)),i.bufferData(i.ARRAY_BUFFER,this.constantArray,i.STATIC_DRAW),i.bindBuffer(i.ARRAY_BUFFER,e.buffer),t=0,this.ATTRIBUTES.forEach(s=>t+=this.bindAttribute(s,e,t,!0)),i.bufferData(i.ARRAY_BUFFER,this.array,i.DYNAMIC_DRAW)):(i.bindBuffer(i.ARRAY_BUFFER,n),t=0,this.ATTRIBUTES.forEach(s=>t+=this.bindAttribute(s,e,t)),i.bufferData(i.ARRAY_BUFFER,this.array,i.DYNAMIC_DRAW)),i.bindBuffer(i.ARRAY_BUFFER,null)}unbindProgram(e){this.isInstanced?(this.CONSTANT_ATTRIBUTES.forEach(t=>this.unbindAttribute(t,e,!1)),this.ATTRIBUTES.forEach(t=>this.unbindAttribute(t,e,!0))):this.ATTRIBUTES.forEach(t=>this.unbindAttribute(t,e))}bindAttribute(e,t,i,n){const s=an[e.type];if(typeof s!="number")throw new Error(`Program.bind: yet unsupported attribute type "${e.type}"`);const o=t.attributeLocations[e.name],a=t.gl;if(o!==-1){a.enableVertexAttribArray(o);const d=this.isInstanced?(n?this.ATTRIBUTES_ITEMS_COUNT:Ee(this.CONSTANT_ATTRIBUTES))*Float32Array.BYTES_PER_ELEMENT:this.ATTRIBUTES_ITEMS_COUNT*Float32Array.BYTES_PER_ELEMENT;if(a.vertexAttribPointer(o,e.size,e.type,e.normalized||!1,d,i),this.isInstanced&&n)if(a instanceof WebGL2RenderingContext)a.vertexAttribDivisor(o,1);else{const h=a.getExtension("ANGLE_instanced_arrays");h&&h.vertexAttribDivisorANGLE(o,1)}}return e.size*s}unbindAttribute(e,t,i){const n=t.attributeLocations[e.name],s=t.gl;if(n!==-1&&(s.disableVertexAttribArray(n),this.isInstanced&&i))if(s instanceof WebGL2RenderingContext)s.vertexAttribDivisor(n,0);else{const o=s.getExtension("ANGLE_instanced_arrays");o&&o.vertexAttribDivisorANGLE(n,0)}}reallocate(e){e!==this.capacity&&(this.capacity=e,this.verticesCount=this.VERTICES*e,this.array=new Float32Array(this.isInstanced?this.capacity*this.ATTRIBUTES_ITEMS_COUNT:this.verticesCount*this.ATTRIBUTES_ITEMS_COUNT))}hasNothingToRender(){return this.verticesCount===0}renderProgram(e,t){const{gl:i,program:n}=t;i.enable(i.BLEND),i.useProgram(n),this.setUniforms(e,t),this.drawWebGL(this.METHOD,t)}render(e){this.hasNothingToRender()||(this.pickProgram&&(this.pickProgram.gl.viewport(0,0,e.width*e.pixelRatio/e.downSizingRatio,e.height*e.pixelRatio/e.downSizingRatio),this.bindProgram(this.pickProgram),this.renderProgram({...e,pixelRatio:e.pixelRatio/e.downSizingRatio},this.pickProgram),this.unbindProgram(this.pickProgram)),this.normalProgram.gl.viewport(0,0,e.width*e.pixelRatio,e.height*e.pixelRatio),this.bindProgram(this.normalProgram),this.renderProgram(e,this.normalProgram),this.unbindProgram(this.normalProgram))}drawWebGL(e,{gl:t,frameBuffer:i}){if(t.bindFramebuffer(t.FRAMEBUFFER,i),!this.isInstanced)t.drawArrays(e,0,this.verticesCount);else if(t instanceof WebGL2RenderingContext)t.drawArraysInstanced(e,0,this.VERTICES,this.capacity);else{const n=t.getExtension("ANGLE_instanced_arrays");n&&n.drawArraysInstancedANGLE(e,0,this.VERTICES,this.capacity)}}}class hn extends xt{kill(){super.kill()}process(e,t,i){let n=t*this.STRIDE;if(i.hidden){for(let s=n+this.STRIDE;n<s;n++)this.array[n]=0;return}return this.processVisibleItem(Et(e),n,i)}}function Zn(r,e,t){return class{constructor(n,s,o){this.drawLabel=e,this.drawHover=t,this.programs=r.map(a=>new a(n,s,o))}reallocate(n){this.programs.forEach(s=>s.reallocate(n))}process(n,s,o){this.programs.forEach(a=>a.process(n,s,o))}render(n){this.programs.forEach(s=>s.render(n))}kill(){this.programs.forEach(n=>n.kill())}}}class Re extends xt{constructor(){super(...arguments),this.drawLabel=void 0}kill(){super.kill()}process(e,t,i,n,s){let o=t*this.STRIDE;if(s.hidden||i.hidden||n.hidden){for(let a=o+this.STRIDE;o<a;o++)this.array[o]=0;return}return this.processVisibleItem(Et(e),o,i,n,s)}}function dn(r,e){return class{constructor(i,n,s){this.drawLabel=e,this.programs=r.map(o=>new o(i,n,s))}reallocate(i){this.programs.forEach(n=>n.reallocate(i))}process(i,n,s,o,a){this.programs.forEach(d=>d.process(i,n,s,o,a))}render(i){this.programs.forEach(n=>n.render(i))}kill(){this.programs.forEach(i=>i.kill())}}}function un(r,e,t,i,n){const s=n.edgeLabelSize,o=n.edgeLabelFont,a=n.edgeLabelWeight,d=n.edgeLabelColor.attribute?e[n.edgeLabelColor.attribute]||n.edgeLabelColor.color||"#000":n.edgeLabelColor.color;let h=e.label;if(!h)return;r.fillStyle=d,r.font=`${a} ${s}px ${o}`;const c=t.size,u=i.size;let l=t.x,g=t.y,m=i.x,_=i.y,v=(l+m)/2,b=(g+_)/2,C=m-l,S=_-g,f=Math.sqrt(C*C+S*S);if(f<c+u)return;l+=C*c/f,g+=S*c/f,m-=C*u/f,_-=S*u/f,v=(l+m)/2,b=(g+_)/2,C=m-l,S=_-g,f=Math.sqrt(C*C+S*S);let p=r.measureText(h).width;if(p>f){const x="…";for(h=h+x,p=r.measureText(h).width;p>f&&h.length>1;)h=h.slice(0,-2)+x,p=r.measureText(h).width;if(h.length<4)return}let w;C>0?S>0?w=Math.acos(C/f):w=Math.asin(S/f):S>0?w=Math.acos(C/f)+Math.PI:w=Math.asin(C/f)+Math.PI/2,r.save(),r.translate(v,b),r.rotate(w),r.fillText(h,-p/2,e.size/2+s),r.restore()}function _t(r,e,t){if(!e.label)return;const i=t.labelSize,n=t.labelFont,s=t.labelWeight,o=t.labelColor.attribute?e[t.labelColor.attribute]||t.labelColor.color||"#000":t.labelColor.color;r.fillStyle=o,r.font=`${s} ${i}px ${n}`,r.fillText(e.label,e.x+e.size+3,e.y+i/3)}function cn(r,e,t){const i=t.labelSize,n=t.labelFont,s=t.labelWeight;r.font=`${s} ${i}px ${n}`,r.fillStyle="#FFF",r.shadowOffsetX=0,r.shadowOffsetY=0,r.shadowBlur=8,r.shadowColor="#000";const o=2;if(typeof e.label=="string"){const a=r.measureText(e.label).width,d=Math.round(a+5),h=Math.round(i+2*o),c=Math.max(e.size,i/2)+o,u=Math.asin(h/2/c),l=Math.sqrt(Math.abs(Math.pow(c,2)-Math.pow(h/2,2)));r.beginPath(),r.moveTo(e.x+l,e.y+h/2),r.lineTo(e.x+c+d,e.y+h/2),r.lineTo(e.x+c+d,e.y-h/2),r.lineTo(e.x+l,e.y-h/2),r.arc(e.x,e.y,c,u,-u),r.closePath(),r.fill()}else r.beginPath(),r.arc(e.x,e.y,e.size+o,0,Math.PI*2),r.closePath(),r.fill();r.shadowOffsetX=0,r.shadowOffsetY=0,r.shadowBlur=0,_t(r,e,t)}const ln=`
precision highp float;

varying vec4 v_color;
varying vec2 v_diffVector;
varying float v_radius;

uniform float u_correctionRatio;

const vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);

void main(void) {
  float border = u_correctionRatio * 2.0;
  float dist = length(v_diffVector) - v_radius + border;

  // No antialiasing for picking mode:
  #ifdef PICKING_MODE
  if (dist > border)
    gl_FragColor = transparent;
  else
    gl_FragColor = v_color;

  #else
  float t = 0.0;
  if (dist > border)
    t = 1.0;
  else if (dist > 0.0)
    t = dist / border;

  gl_FragColor = mix(v_color, transparent, t);
  #endif
}
`,fn=`
attribute vec4 a_id;
attribute vec4 a_color;
attribute vec2 a_position;
attribute float a_size;
attribute float a_angle;

uniform mat3 u_matrix;
uniform float u_sizeRatio;
uniform float u_correctionRatio;

varying vec4 v_color;
varying vec2 v_diffVector;
varying float v_radius;
varying float v_border;

const float bias = 255.0 / 254.0;

void main() {
  float size = a_size * u_correctionRatio / u_sizeRatio * 4.0;
  vec2 diffVector = size * vec2(cos(a_angle), sin(a_angle));
  vec2 position = a_position + diffVector;
  gl_Position = vec4(
    (u_matrix * vec3(position, 1)).xy,
    0,
    1
  );

  v_diffVector = diffVector;
  v_radius = size / 2.0;

  #ifdef PICKING_MODE
  // For picking mode, we use the ID as the color:
  v_color = a_id;
  #else
  // For normal mode, we use the color:
  v_color = a_color;
  #endif

  v_color.a *= bias;
}
`,{UNSIGNED_BYTE:Ke,FLOAT:ve}=WebGLRenderingContext,gn=["u_sizeRatio","u_correctionRatio","u_matrix"],W=class W extends hn{getDefinition(){return{VERTICES:3,VERTEX_SHADER_SOURCE:fn,FRAGMENT_SHADER_SOURCE:ln,METHOD:WebGLRenderingContext.TRIANGLES,UNIFORMS:gn,ATTRIBUTES:[{name:"a_position",size:2,type:ve},{name:"a_size",size:1,type:ve},{name:"a_color",size:4,type:Ke,normalized:!0},{name:"a_id",size:4,type:Ke,normalized:!0}],CONSTANT_ATTRIBUTES:[{name:"a_angle",size:1,type:ve}],CONSTANT_DATA:[[W.ANGLE_1],[W.ANGLE_2],[W.ANGLE_3]]}}processVisibleItem(e,t,i){const n=this.array,s=X(i.color);n[t++]=i.x,n[t++]=i.y,n[t++]=i.size,n[t++]=s,n[t++]=e}setUniforms(e,{gl:t,uniformLocations:i}){const{u_sizeRatio:n,u_correctionRatio:s,u_matrix:o}=i;t.uniform1f(s,e.correctionRatio),t.uniform1f(n,e.sizeRatio),t.uniformMatrix3fv(o,!1,e.matrix)}};W.ANGLE_1=0,W.ANGLE_2=2*Math.PI/3,W.ANGLE_3=4*Math.PI/3;let Te=W;const pn=`
precision mediump float;

varying vec4 v_color;

void main(void) {
  gl_FragColor = v_color;
}
`,mn=`
attribute vec2 a_position;
attribute vec2 a_normal;
attribute float a_radius;
attribute vec3 a_barycentric;

#ifdef PICKING_MODE
attribute vec4 a_id;
#else
attribute vec4 a_color;
#endif

uniform mat3 u_matrix;
uniform float u_sizeRatio;
uniform float u_correctionRatio;
uniform float u_minEdgeThickness;
uniform float u_lengthToThicknessRatio;
uniform float u_widenessToThicknessRatio;

varying vec4 v_color;

const float bias = 255.0 / 254.0;

void main() {
  float minThickness = u_minEdgeThickness;

  float normalLength = length(a_normal);
  vec2 unitNormal = a_normal / normalLength;

  // These first computations are taken from edge.vert.glsl and
  // edge.clamped.vert.glsl. Please read it to get better comments on what's
  // happening:
  float pixelsThickness = max(normalLength / u_sizeRatio, minThickness);
  float webGLThickness = pixelsThickness * u_correctionRatio;
  float webGLNodeRadius = a_radius * 2.0 * u_correctionRatio / u_sizeRatio;
  float webGLArrowHeadLength = webGLThickness * u_lengthToThicknessRatio * 2.0;
  float webGLArrowHeadThickness = webGLThickness * u_widenessToThicknessRatio;

  float da = a_barycentric.x;
  float db = a_barycentric.y;
  float dc = a_barycentric.z;

  vec2 delta = vec2(
      da * (webGLNodeRadius * unitNormal.y)
    + db * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y + webGLArrowHeadThickness * unitNormal.x)
    + dc * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y - webGLArrowHeadThickness * unitNormal.x),

      da * (-webGLNodeRadius * unitNormal.x)
    + db * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x + webGLArrowHeadThickness * unitNormal.y)
    + dc * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x - webGLArrowHeadThickness * unitNormal.y)
  );

  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;

  gl_Position = vec4(position, 0, 1);

  #ifdef PICKING_MODE
  // For picking mode, we use the ID as the color:
  v_color = a_id;
  #else
  // For normal mode, we use the color:
  v_color = a_color;
  #endif

  v_color.a *= bias;
}
`,{UNSIGNED_BYTE:Ze,FLOAT:ue}=WebGLRenderingContext,yn=["u_matrix","u_sizeRatio","u_correctionRatio","u_minEdgeThickness","u_lengthToThicknessRatio","u_widenessToThicknessRatio"],Tt={extremity:"target",lengthToThicknessRatio:2.5,widenessToThicknessRatio:2};function Ct(r){const e={...Tt,...r||{}};return class extends Re{getDefinition(){return{VERTICES:3,VERTEX_SHADER_SOURCE:mn,FRAGMENT_SHADER_SOURCE:pn,METHOD:WebGLRenderingContext.TRIANGLES,UNIFORMS:yn,ATTRIBUTES:[{name:"a_position",size:2,type:ue},{name:"a_normal",size:2,type:ue},{name:"a_radius",size:1,type:ue},{name:"a_color",size:4,type:Ze,normalized:!0},{name:"a_id",size:4,type:Ze,normalized:!0}],CONSTANT_ATTRIBUTES:[{name:"a_barycentric",size:3,type:ue}],CONSTANT_DATA:[[1,0,0],[0,1,0],[0,0,1]]}}processVisibleItem(i,n,s,o,a){e.extremity==="source"&&([s,o]=[o,s]);const d=a.size||1,h=o.size||1,c=s.x,u=s.y,l=o.x,g=o.y,m=X(a.color),_=l-c,v=g-u;let b=_*_+v*v,C=0,S=0;b&&(b=1/Math.sqrt(b),C=-v*b*d,S=_*b*d);const f=this.array;f[n++]=l,f[n++]=g,f[n++]=-C,f[n++]=-S,f[n++]=h,f[n++]=m,f[n++]=i}setUniforms(i,{gl:n,uniformLocations:s}){const{u_matrix:o,u_sizeRatio:a,u_correctionRatio:d,u_minEdgeThickness:h,u_lengthToThicknessRatio:c,u_widenessToThicknessRatio:u}=s;n.uniformMatrix3fv(o,!1,i.matrix),n.uniform1f(a,i.sizeRatio),n.uniform1f(d,i.correctionRatio),n.uniform1f(h,i.minEdgeThickness),n.uniform1f(c,e.lengthToThicknessRatio),n.uniform1f(u,e.widenessToThicknessRatio)}}}Ct();const At=`
precision mediump float;

varying vec4 v_color;
varying vec2 v_normal;
varying float v_thickness;
varying float v_feather;

const vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);

void main(void) {
  // We only handle antialiasing for normal mode:
  #ifdef PICKING_MODE
  gl_FragColor = v_color;
  #else
  float dist = length(v_normal) * v_thickness;

  float t = smoothstep(
    v_thickness - v_feather,
    v_thickness,
    dist
  );

  gl_FragColor = mix(v_color, transparent, t);
  #endif
}
`,wn=`
attribute vec4 a_id;
attribute vec4 a_color;
attribute vec2 a_normal;
attribute float a_normalCoef;
attribute vec2 a_positionStart;
attribute vec2 a_positionEnd;
attribute float a_positionCoef;
attribute float a_radius;
attribute float a_radiusCoef;

uniform mat3 u_matrix;
uniform float u_zoomRatio;
uniform float u_sizeRatio;
uniform float u_pixelRatio;
uniform float u_correctionRatio;
uniform float u_minEdgeThickness;
uniform float u_lengthToThicknessRatio;
uniform float u_feather;

varying vec4 v_color;
varying vec2 v_normal;
varying float v_thickness;
varying float v_feather;

const float bias = 255.0 / 254.0;

void main() {
  float minThickness = u_minEdgeThickness;

  float radius = a_radius * a_radiusCoef;
  vec2 normal = a_normal * a_normalCoef;
  vec2 position = a_positionStart * (1.0 - a_positionCoef) + a_positionEnd * a_positionCoef;

  float normalLength = length(normal);
  vec2 unitNormal = normal / normalLength;

  // These first computations are taken from edge.vert.glsl. Please read it to
  // get better comments on what's happening:
  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);
  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;

  // Here, we move the point to leave space for the arrow head:
  float direction = sign(radius);
  float webGLNodeRadius = direction * radius * 2.0 * u_correctionRatio / u_sizeRatio;
  float webGLArrowHeadLength = webGLThickness * u_lengthToThicknessRatio * 2.0;

  vec2 compensationVector = vec2(-direction * unitNormal.y, direction * unitNormal.x) * (webGLNodeRadius + webGLArrowHeadLength);

  // Here is the proper position of the vertex
  gl_Position = vec4((u_matrix * vec3(position + unitNormal * webGLThickness + compensationVector, 1)).xy, 0, 1);

  v_thickness = webGLThickness / u_zoomRatio;

  v_normal = unitNormal;

  v_feather = u_feather * u_correctionRatio / u_zoomRatio / u_pixelRatio * 2.0;

  #ifdef PICKING_MODE
  // For picking mode, we use the ID as the color:
  v_color = a_id;
  #else
  // For normal mode, we use the color:
  v_color = a_color;
  #endif

  v_color.a *= bias;
}
`,{UNSIGNED_BYTE:qe,FLOAT:V}=WebGLRenderingContext,bn=["u_matrix","u_zoomRatio","u_sizeRatio","u_correctionRatio","u_pixelRatio","u_feather","u_minEdgeThickness","u_lengthToThicknessRatio"],En={lengthToThicknessRatio:Tt.lengthToThicknessRatio};function vn(r){const e={...En};return class extends Re{getDefinition(){return{VERTICES:6,VERTEX_SHADER_SOURCE:wn,FRAGMENT_SHADER_SOURCE:At,METHOD:WebGLRenderingContext.TRIANGLES,UNIFORMS:bn,ATTRIBUTES:[{name:"a_positionStart",size:2,type:V},{name:"a_positionEnd",size:2,type:V},{name:"a_normal",size:2,type:V},{name:"a_color",size:4,type:qe,normalized:!0},{name:"a_id",size:4,type:qe,normalized:!0},{name:"a_radius",size:1,type:V}],CONSTANT_ATTRIBUTES:[{name:"a_positionCoef",size:1,type:V},{name:"a_normalCoef",size:1,type:V},{name:"a_radiusCoef",size:1,type:V}],CONSTANT_DATA:[[0,1,0],[0,-1,0],[1,1,1],[1,1,1],[0,-1,0],[1,-1,-1]]}}processVisibleItem(i,n,s,o,a){const d=a.size||1,h=s.x,c=s.y,u=o.x,l=o.y,g=X(a.color),m=u-h,_=l-c,v=o.size||1;let b=m*m+_*_,C=0,S=0;b&&(b=1/Math.sqrt(b),C=-_*b*d,S=m*b*d);const f=this.array;f[n++]=h,f[n++]=c,f[n++]=u,f[n++]=l,f[n++]=C,f[n++]=S,f[n++]=g,f[n++]=i,f[n++]=v}setUniforms(i,{gl:n,uniformLocations:s}){const{u_matrix:o,u_zoomRatio:a,u_feather:d,u_pixelRatio:h,u_correctionRatio:c,u_sizeRatio:u,u_minEdgeThickness:l,u_lengthToThicknessRatio:g}=s;n.uniformMatrix3fv(o,!1,i.matrix),n.uniform1f(a,i.zoomRatio),n.uniform1f(u,i.sizeRatio),n.uniform1f(c,i.correctionRatio),n.uniform1f(h,i.pixelRatio),n.uniform1f(d,i.antiAliasingFeather),n.uniform1f(l,i.minEdgeThickness),n.uniform1f(g,e.lengthToThicknessRatio)}}}function xn(r){return dn([vn(),Ct(r)])}const _n=xn(),Tn=`
attribute vec4 a_id;
attribute vec4 a_color;
attribute vec2 a_normal;
attribute float a_normalCoef;
attribute vec2 a_positionStart;
attribute vec2 a_positionEnd;
attribute float a_positionCoef;

uniform mat3 u_matrix;
uniform float u_sizeRatio;
uniform float u_zoomRatio;
uniform float u_pixelRatio;
uniform float u_correctionRatio;
uniform float u_minEdgeThickness;
uniform float u_feather;

varying vec4 v_color;
varying vec2 v_normal;
varying float v_thickness;
varying float v_feather;

const float bias = 255.0 / 254.0;

void main() {
  float minThickness = u_minEdgeThickness;

  vec2 normal = a_normal * a_normalCoef;
  vec2 position = a_positionStart * (1.0 - a_positionCoef) + a_positionEnd * a_positionCoef;

  float normalLength = length(normal);
  vec2 unitNormal = normal / normalLength;

  // We require edges to be at least "minThickness" pixels thick *on screen*
  // (so we need to compensate the size ratio):
  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);

  // Then, we need to retrieve the normalized thickness of the edge in the WebGL
  // referential (in a ([0, 1], [0, 1]) space), using our "magic" correction
  // ratio:
  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;

  // Here is the proper position of the vertex
  gl_Position = vec4((u_matrix * vec3(position + unitNormal * webGLThickness, 1)).xy, 0, 1);

  // For the fragment shader though, we need a thickness that takes the "magic"
  // correction ratio into account (as in webGLThickness), but so that the
  // antialiasing effect does not depend on the zoom level. So here's yet
  // another thickness version:
  v_thickness = webGLThickness / u_zoomRatio;

  v_normal = unitNormal;

  v_feather = u_feather * u_correctionRatio / u_zoomRatio / u_pixelRatio * 2.0;

  #ifdef PICKING_MODE
  // For picking mode, we use the ID as the color:
  v_color = a_id;
  #else
  // For normal mode, we use the color:
  v_color = a_color;
  #endif

  v_color.a *= bias;
}
`,{UNSIGNED_BYTE:Xe,FLOAT:ie}=WebGLRenderingContext,Cn=["u_matrix","u_zoomRatio","u_sizeRatio","u_correctionRatio","u_pixelRatio","u_feather","u_minEdgeThickness"];class An extends Re{getDefinition(){return{VERTICES:6,VERTEX_SHADER_SOURCE:Tn,FRAGMENT_SHADER_SOURCE:At,METHOD:WebGLRenderingContext.TRIANGLES,UNIFORMS:Cn,ATTRIBUTES:[{name:"a_positionStart",size:2,type:ie},{name:"a_positionEnd",size:2,type:ie},{name:"a_normal",size:2,type:ie},{name:"a_color",size:4,type:Xe,normalized:!0},{name:"a_id",size:4,type:Xe,normalized:!0}],CONSTANT_ATTRIBUTES:[{name:"a_positionCoef",size:1,type:ie},{name:"a_normalCoef",size:1,type:ie}],CONSTANT_DATA:[[0,1],[0,-1],[1,1],[1,1],[0,-1],[1,-1]]}}processVisibleItem(e,t,i,n,s){const o=s.size||1,a=i.x,d=i.y,h=n.x,c=n.y,u=X(s.color),l=h-a,g=c-d;let m=l*l+g*g,_=0,v=0;m&&(m=1/Math.sqrt(m),_=-g*m*o,v=l*m*o);const b=this.array;b[t++]=a,b[t++]=d,b[t++]=h,b[t++]=c,b[t++]=_,b[t++]=v,b[t++]=u,b[t++]=e}setUniforms(e,{gl:t,uniformLocations:i}){const{u_matrix:n,u_zoomRatio:s,u_feather:o,u_pixelRatio:a,u_correctionRatio:d,u_sizeRatio:h,u_minEdgeThickness:c}=i;t.uniformMatrix3fv(n,!1,e.matrix),t.uniform1f(s,e.zoomRatio),t.uniform1f(h,e.sizeRatio),t.uniform1f(d,e.correctionRatio),t.uniform1f(a,e.pixelRatio),t.uniform1f(o,e.antiAliasingFeather),t.uniform1f(c,e.minEdgeThickness)}}const Ge={hideEdgesOnMove:!1,hideLabelsOnMove:!1,renderLabels:!0,renderEdgeLabels:!1,enableEdgeEvents:!1,defaultNodeColor:"#999",defaultNodeType:"circle",defaultEdgeColor:"#ccc",defaultEdgeType:"line",labelFont:"Arial",labelSize:14,labelWeight:"normal",labelColor:{color:"#000"},edgeLabelFont:"Arial",edgeLabelSize:14,edgeLabelWeight:"normal",edgeLabelColor:{attribute:"color"},stagePadding:30,defaultDrawEdgeLabel:un,defaultDrawNodeLabel:_t,defaultDrawNodeHover:cn,minEdgeThickness:1.7,antiAliasingFeather:1,dragTimeout:100,draggedEventsTolerance:3,inertiaDuration:200,inertiaRatio:3,zoomDuration:250,zoomingRatio:1.7,doubleClickTimeout:300,doubleClickZoomingRatio:2.2,doubleClickZoomingDuration:200,tapMoveTolerance:10,zoomToSizeRatioFunction:Math.sqrt,itemSizesReference:"screen",autoRescale:!0,autoCenter:!0,labelDensity:1,labelGridCellSize:100,labelRenderedSizeThreshold:6,nodeReducer:null,edgeReducer:null,zIndex:!1,minCameraRatio:null,maxCameraRatio:null,enableCameraZooming:!0,enableCameraPanning:!0,enableCameraRotation:!0,cameraPanBoundaries:null,allowInvalidContainer:!1,nodeProgramClasses:{},nodeHoverProgramClasses:{},edgeProgramClasses:{}},Sn={circle:Te},Ln={arrow:_n,line:An};function xe(r){if(typeof r.labelDensity!="number"||r.labelDensity<0)throw new Error("Settings: invalid `labelDensity`. Expecting a positive number.");const{minCameraRatio:e,maxCameraRatio:t}=r;if(typeof e=="number"&&typeof t=="number"&&t<e)throw new Error("Settings: invalid camera ratio boundaries. Expecting `maxCameraRatio` to be greater than `minCameraRatio`.")}function Dn(r){const e=be({},Ge,r);return e.nodeProgramClasses=be({},Sn,e.nodeProgramClasses),e.edgeProgramClasses=be({},Ln,e.edgeProgramClasses),e}function M(r,e){const t=e.getBoundingClientRect();return{x:r.clientX-t.left,y:r.clientY-t.top}}function U(r,e){const t={...M(r,e),sigmaDefaultPrevented:!1,preventSigmaDefault(){t.sigmaDefaultPrevented=!0},original:r};return t}function ne(r){const e="x"in r?r:{...r.touches[0]||r.previousTouches[0],original:r.original,sigmaDefaultPrevented:r.sigmaDefaultPrevented,preventSigmaDefault:()=>{r.sigmaDefaultPrevented=!0,e.sigmaDefaultPrevented=!0}};return e}function Rn(r,e){return{...U(r,e),delta:St(r)}}const Gn=2;function le(r){const e=[];for(let t=0,i=Math.min(r.length,Gn);t<i;t++)e.push(r[t]);return e}function re(r,e,t){const i={touches:le(r.touches).map(n=>M(n,t)),previousTouches:e.map(n=>M(n,t)),sigmaDefaultPrevented:!1,preventSigmaDefault(){i.sigmaDefaultPrevented=!0},original:r};return i}function St(r){if(typeof r.deltaY<"u")return r.deltaY*-3/360;if(typeof r.detail<"u")return r.detail/-9;throw new Error("Captor: could not extract delta from event.")}class Lt extends De{constructor(e,t){super(),this.container=e,this.renderer=t}}const Nn=["doubleClickTimeout","doubleClickZoomingDuration","doubleClickZoomingRatio","dragTimeout","draggedEventsTolerance","inertiaDuration","inertiaRatio","zoomDuration","zoomingRatio"],kn=Nn.reduce((r,e)=>({...r,[e]:Ge[e]}),{});class Fn extends Lt{constructor(e,t){super(e,t),this.enabled=!0,this.draggedEvents=0,this.downStartTime=null,this.lastMouseX=null,this.lastMouseY=null,this.isMouseDown=!1,this.isMoving=!1,this.movingTimeout=null,this.startCameraState=null,this.clicks=0,this.doubleClickTimeout=null,this.currentWheelDirection=0,this.settings=kn,this.handleClick=this.handleClick.bind(this),this.handleRightClick=this.handleRightClick.bind(this),this.handleDown=this.handleDown.bind(this),this.handleUp=this.handleUp.bind(this),this.handleMove=this.handleMove.bind(this),this.handleWheel=this.handleWheel.bind(this),this.handleLeave=this.handleLeave.bind(this),this.handleEnter=this.handleEnter.bind(this),e.addEventListener("click",this.handleClick,{capture:!1}),e.addEventListener("contextmenu",this.handleRightClick,{capture:!1}),e.addEventListener("mousedown",this.handleDown,{capture:!1}),e.addEventListener("wheel",this.handleWheel,{capture:!1}),e.addEventListener("mouseleave",this.handleLeave,{capture:!1}),e.addEventListener("mouseenter",this.handleEnter,{capture:!1}),document.addEventListener("mousemove",this.handleMove,{capture:!1}),document.addEventListener("mouseup",this.handleUp,{capture:!1})}kill(){const e=this.container;e.removeEventListener("click",this.handleClick),e.removeEventListener("contextmenu",this.handleRightClick),e.removeEventListener("mousedown",this.handleDown),e.removeEventListener("wheel",this.handleWheel),e.removeEventListener("mouseleave",this.handleLeave),e.removeEventListener("mouseenter",this.handleEnter),document.removeEventListener("mousemove",this.handleMove),document.removeEventListener("mouseup",this.handleUp)}handleClick(e){if(this.enabled){if(this.clicks++,this.clicks===2)return this.clicks=0,typeof this.doubleClickTimeout=="number"&&(clearTimeout(this.doubleClickTimeout),this.doubleClickTimeout=null),this.handleDoubleClick(e);setTimeout(()=>{this.clicks=0,this.doubleClickTimeout=null},this.settings.doubleClickTimeout),this.draggedEvents<this.settings.draggedEventsTolerance&&this.emit("click",U(e,this.container))}}handleRightClick(e){this.enabled&&this.emit("rightClick",U(e,this.container))}handleDoubleClick(e){if(!this.enabled)return;e.preventDefault(),e.stopPropagation();const t=U(e,this.container);if(this.emit("doubleClick",t),t.sigmaDefaultPrevented)return;const i=this.renderer.getCamera(),n=i.getBoundedRatio(i.getState().ratio/this.settings.doubleClickZoomingRatio);i.animate(this.renderer.getViewportZoomedState(M(e,this.container),n),{easing:"quadraticInOut",duration:this.settings.doubleClickZoomingDuration})}handleDown(e){if(this.enabled){if(e.button===0){this.startCameraState=this.renderer.getCamera().getState();const{x:t,y:i}=M(e,this.container);this.lastMouseX=t,this.lastMouseY=i,this.draggedEvents=0,this.downStartTime=Date.now(),this.isMouseDown=!0}this.emit("mousedown",U(e,this.container))}}handleUp(e){if(!this.enabled||!this.isMouseDown)return;const t=this.renderer.getCamera();this.isMouseDown=!1,typeof this.movingTimeout=="number"&&(clearTimeout(this.movingTimeout),this.movingTimeout=null);const{x:i,y:n}=M(e,this.container),s=t.getState(),o=t.getPreviousState()||{x:0,y:0};this.isMoving?t.animate({x:s.x+this.settings.inertiaRatio*(s.x-o.x),y:s.y+this.settings.inertiaRatio*(s.y-o.y)},{duration:this.settings.inertiaDuration,easing:"quadraticOut"}):(this.lastMouseX!==i||this.lastMouseY!==n)&&t.setState({x:s.x,y:s.y}),this.isMoving=!1,setTimeout(()=>{const a=this.draggedEvents>0;this.draggedEvents=0,a&&this.renderer.getSetting("hideEdgesOnMove")&&this.renderer.refresh()},0),this.emit("mouseup",U(e,this.container))}handleMove(e){if(!this.enabled)return;const t=U(e,this.container);if(this.emit("mousemovebody",t),(e.target===this.container||e.composedPath()[0]===this.container)&&this.emit("mousemove",t),!t.sigmaDefaultPrevented&&this.isMouseDown){this.isMoving=!0,this.draggedEvents++,typeof this.movingTimeout=="number"&&clearTimeout(this.movingTimeout),this.movingTimeout=window.setTimeout(()=>{this.movingTimeout=null,this.isMoving=!1},this.settings.dragTimeout);const i=this.renderer.getCamera(),{x:n,y:s}=M(e,this.container),o=this.renderer.viewportToFramedGraph({x:this.lastMouseX,y:this.lastMouseY}),a=this.renderer.viewportToFramedGraph({x:n,y:s}),d=o.x-a.x,h=o.y-a.y,c=i.getState(),u=c.x+d,l=c.y+h;i.setState({x:u,y:l}),this.lastMouseX=n,this.lastMouseY=s,e.preventDefault(),e.stopPropagation()}}handleLeave(e){this.emit("mouseleave",U(e,this.container))}handleEnter(e){this.emit("mouseenter",U(e,this.container))}handleWheel(e){const t=this.renderer.getCamera();if(!this.enabled||!t.enabledZooming)return;const i=St(e);if(!i)return;const n=Rn(e,this.container);if(this.emit("wheel",n),n.sigmaDefaultPrevented){e.preventDefault(),e.stopPropagation();return}const s=t.getState().ratio,o=i>0?1/this.settings.zoomingRatio:this.settings.zoomingRatio,a=t.getBoundedRatio(s*o),d=i>0?1:-1,h=Date.now();s!==a&&(e.preventDefault(),e.stopPropagation(),!(this.currentWheelDirection===d&&this.lastWheelTriggerTime&&h-this.lastWheelTriggerTime<this.settings.zoomDuration/5)&&(t.animate(this.renderer.getViewportZoomedState(M(e,this.container),a),{easing:"quadraticOut",duration:this.settings.zoomDuration},()=>{this.currentWheelDirection=0}),this.currentWheelDirection=d,this.lastWheelTriggerTime=h))}setSettings(e){this.settings=e}}const Pn=["dragTimeout","inertiaDuration","inertiaRatio","doubleClickTimeout","doubleClickZoomingRatio","doubleClickZoomingDuration","tapMoveTolerance"],$n=Pn.reduce((r,e)=>({...r,[e]:Ge[e]}),{});class In extends Lt{constructor(e,t){super(e,t),this.enabled=!0,this.isMoving=!1,this.hasMoved=!1,this.touchMode=0,this.startTouchesPositions=[],this.lastTouches=[],this.lastTap=null,this.settings=$n,this.handleStart=this.handleStart.bind(this),this.handleLeave=this.handleLeave.bind(this),this.handleMove=this.handleMove.bind(this),e.addEventListener("touchstart",this.handleStart,{capture:!1}),e.addEventListener("touchcancel",this.handleLeave,{capture:!1}),document.addEventListener("touchend",this.handleLeave,{capture:!1,passive:!1}),document.addEventListener("touchmove",this.handleMove,{capture:!1,passive:!1})}kill(){const e=this.container;e.removeEventListener("touchstart",this.handleStart),e.removeEventListener("touchcancel",this.handleLeave),document.removeEventListener("touchend",this.handleLeave),document.removeEventListener("touchmove",this.handleMove)}getDimensions(){return{width:this.container.offsetWidth,height:this.container.offsetHeight}}handleStart(e){if(!this.enabled)return;e.preventDefault();const t=le(e.touches);if(this.touchMode=t.length,this.startCameraState=this.renderer.getCamera().getState(),this.startTouchesPositions=t.map(i=>M(i,this.container)),this.touchMode===2){const[{x:i,y:n},{x:s,y:o}]=this.startTouchesPositions;this.startTouchesAngle=Math.atan2(o-n,s-i),this.startTouchesDistance=Math.sqrt(Math.pow(s-i,2)+Math.pow(o-n,2))}this.emit("touchdown",re(e,this.lastTouches,this.container)),this.lastTouches=t,this.lastTouchesPositions=this.startTouchesPositions}handleLeave(e){if(!(!this.enabled||!this.startTouchesPositions.length)){switch(e.cancelable&&e.preventDefault(),this.movingTimeout&&(this.isMoving=!1,clearTimeout(this.movingTimeout)),this.touchMode){case 2:if(e.touches.length===1){this.handleStart(e),e.preventDefault();break}case 1:if(this.isMoving){const t=this.renderer.getCamera(),i=t.getState(),n=t.getPreviousState()||{x:0,y:0};t.animate({x:i.x+this.settings.inertiaRatio*(i.x-n.x),y:i.y+this.settings.inertiaRatio*(i.y-n.y)},{duration:this.settings.inertiaDuration,easing:"quadraticOut"})}this.hasMoved=!1,this.isMoving=!1,this.touchMode=0;break}if(this.emit("touchup",re(e,this.lastTouches,this.container)),!e.touches.length){const t=M(this.lastTouches[0],this.container),i=this.startTouchesPositions[0],n=(t.x-i.x)**2+(t.y-i.y)**2;if(!e.touches.length&&n<this.settings.tapMoveTolerance**2)if(this.lastTap&&Date.now()-this.lastTap.time<this.settings.doubleClickTimeout){const s=re(e,this.lastTouches,this.container);if(this.emit("doubletap",s),this.lastTap=null,!s.sigmaDefaultPrevented){const o=this.renderer.getCamera(),a=o.getBoundedRatio(o.getState().ratio/this.settings.doubleClickZoomingRatio);o.animate(this.renderer.getViewportZoomedState(t,a),{easing:"quadraticInOut",duration:this.settings.doubleClickZoomingDuration})}}else{const s=re(e,this.lastTouches,this.container);this.emit("tap",s),this.lastTap={time:Date.now(),position:s.touches[0]||s.previousTouches[0]}}}this.lastTouches=le(e.touches),this.startTouchesPositions=[]}}handleMove(e){if(!this.enabled||!this.startTouchesPositions.length)return;e.preventDefault();const t=le(e.touches),i=t.map(h=>M(h,this.container)),n=this.lastTouches;this.lastTouches=t,this.lastTouchesPositions=i;const s=re(e,n,this.container);if(this.emit("touchmove",s),s.sigmaDefaultPrevented||(this.hasMoved||(this.hasMoved=i.some((h,c)=>{const u=this.startTouchesPositions[c];return u&&(h.x!==u.x||h.y!==u.y)})),!this.hasMoved))return;this.isMoving=!0,this.movingTimeout&&clearTimeout(this.movingTimeout),this.movingTimeout=window.setTimeout(()=>{this.isMoving=!1},this.settings.dragTimeout);const o=this.renderer.getCamera(),a=this.startCameraState,d=this.renderer.getSetting("stagePadding");switch(this.touchMode){case 1:{const{x:h,y:c}=this.renderer.viewportToFramedGraph((this.startTouchesPositions||[])[0]),{x:u,y:l}=this.renderer.viewportToFramedGraph(i[0]);o.setState({x:a.x+h-u,y:a.y+c-l});break}case 2:{const h={x:.5,y:.5,angle:0,ratio:1},{x:c,y:u}=i[0],{x:l,y:g}=i[1],m=Math.atan2(g-u,l-c)-this.startTouchesAngle,_=Math.hypot(g-u,l-c)/this.startTouchesDistance,v=o.getBoundedRatio(a.ratio/_);h.ratio=v,h.angle=a.angle+m;const b=this.getDimensions(),C=this.renderer.viewportToFramedGraph((this.startTouchesPositions||[])[0],{cameraState:a}),S=Math.min(b.width,b.height)-2*d,f=S/b.width,p=S/b.height,w=v/S;let x=c-S/2/f,A=u-S/2/p;[x,A]=[x*Math.cos(-h.angle)-A*Math.sin(-h.angle),A*Math.cos(-h.angle)+x*Math.sin(-h.angle)],h.x=C.x-x*w,h.y=C.y+A*w,o.setState(h);break}}}setSettings(e){this.settings=e}}class Je{constructor(e,t){this.key=e,this.size=t}static compare(e,t){return e.size>t.size?-1:e.size<t.size||e.key>t.key?1:-1}}class Qe{constructor(){this.width=0,this.height=0,this.cellSize=0,this.columns=0,this.rows=0,this.cells={}}resizeAndClear(e,t){this.width=e.width,this.height=e.height,this.cellSize=t,this.columns=Math.ceil(e.width/t),this.rows=Math.ceil(e.height/t),this.cells={}}getIndex(e){const t=Math.floor(e.x/this.cellSize);return Math.floor(e.y/this.cellSize)*this.columns+t}add(e,t,i){const n=new Je(e,t),s=this.getIndex(i);let o=this.cells[s];o||(o=[],this.cells[s]=o),o.push(n)}organize(){for(const e in this.cells)this.cells[e].sort(Je.compare)}getLabelsToDisplay(e,t){const i=this.cellSize*this.cellSize,s=i/e/e*t/i,o=Math.ceil(s),a=[];for(const d in this.cells){const h=this.cells[d];for(let c=0;c<Math.min(o,h.length);c++)a.push(h[c].key)}return a}}function Mn(r){const{graph:e,hoveredNode:t,highlightedNodes:i,displayedNodeLabels:n}=r,s=[];return e.forEachEdge((o,a,d,h)=>{(d===t||h===t||i.has(d)||i.has(h)||n.has(d)&&n.has(h))&&s.push(o)}),s}const Un=150,zn=50,z=Object.prototype.hasOwnProperty;function On(r,e,t){if(!z.call(t,"x")||!z.call(t,"y"))throw new Error(`Sigma: could not find a valid position (x, y) for node "${e}". All your nodes must have a number "x" and "y". Maybe your forgot to apply a layout or your "nodeReducer" is not returning the correct data?`);return t.color||(t.color=r.defaultNodeColor),!t.label&&t.label!==""&&(t.label=null),t.label!==void 0&&t.label!==null?t.label=""+t.label:t.label=null,t.size||(t.size=2),z.call(t,"hidden")||(t.hidden=!1),z.call(t,"highlighted")||(t.highlighted=!1),z.call(t,"forceLabel")||(t.forceLabel=!1),(!t.type||t.type==="")&&(t.type=r.defaultNodeType),t.zIndex||(t.zIndex=0),t}function Bn(r,e,t){return t.color||(t.color=r.defaultEdgeColor),t.label||(t.label=""),t.size||(t.size=.5),z.call(t,"hidden")||(t.hidden=!1),z.call(t,"forceLabel")||(t.forceLabel=!1),(!t.type||t.type==="")&&(t.type=r.defaultEdgeType),t.zIndex||(t.zIndex=0),t}class Qn extends De{constructor(e,t,i={}){if(super(),this.elements={},this.canvasContexts={},this.webGLContexts={},this.pickingLayers=new Set,this.textures={},this.frameBuffers={},this.activeListeners={},this.labelGrid=new Qe,this.nodeDataCache={},this.edgeDataCache={},this.nodeProgramIndex={},this.edgeProgramIndex={},this.nodesWithForcedLabels=new Set,this.edgesWithForcedLabels=new Set,this.nodeExtent={x:[0,1],y:[0,1]},this.nodeZExtent=[1/0,-1/0],this.edgeZExtent=[1/0,-1/0],this.matrix=I(),this.invMatrix=I(),this.correctionRatio=1,this.customBBox=null,this.normalizationFunction=Ve({x:[0,1],y:[0,1]}),this.graphToViewportRatio=1,this.itemIDsIndex={},this.nodeIndices={},this.edgeIndices={},this.width=0,this.height=0,this.pixelRatio=He(),this.pickingDownSizingRatio=2*this.pixelRatio,this.displayedNodeLabels=new Set,this.displayedEdgeLabels=new Set,this.highlightedNodes=new Set,this.hoveredNode=null,this.hoveredEdge=null,this.renderFrame=null,this.renderHighlightedNodesFrame=null,this.needToProcess=!1,this.checkEdgesEventsFrame=null,this.nodePrograms={},this.nodeHoverPrograms={},this.edgePrograms={},this.settings=Dn(i),xe(this.settings),en(e),!(t instanceof HTMLElement))throw new Error("Sigma: container should be an html element.");this.graph=e,this.container=t,this.createWebGLContext("edges",{picking:i.enableEdgeEvents}),this.createCanvasContext("edgeLabels"),this.createWebGLContext("nodes",{picking:!0}),this.createCanvasContext("labels"),this.createCanvasContext("hovers"),this.createWebGLContext("hoverNodes"),this.createCanvasContext("mouse",{style:{touchAction:"none",userSelect:"none"}}),this.resize();for(const n in this.settings.nodeProgramClasses)this.registerNodeProgram(n,this.settings.nodeProgramClasses[n],this.settings.nodeHoverProgramClasses[n]);for(const n in this.settings.edgeProgramClasses)this.registerEdgeProgram(n,this.settings.edgeProgramClasses[n]);this.camera=new se,this.bindCameraHandlers(),this.mouseCaptor=new Fn(this.elements.mouse,this),this.mouseCaptor.setSettings(this.settings),this.touchCaptor=new In(this.elements.mouse,this),this.touchCaptor.setSettings(this.settings),this.bindEventHandlers(),this.bindGraphHandlers(),this.handleSettingsUpdate(),this.refresh()}registerNodeProgram(e,t,i){return this.nodePrograms[e]&&this.nodePrograms[e].kill(),this.nodeHoverPrograms[e]&&this.nodeHoverPrograms[e].kill(),this.nodePrograms[e]=new t(this.webGLContexts.nodes,this.frameBuffers.nodes,this),this.nodeHoverPrograms[e]=new(i||t)(this.webGLContexts.hoverNodes,null,this),this}registerEdgeProgram(e,t){return this.edgePrograms[e]&&this.edgePrograms[e].kill(),this.edgePrograms[e]=new t(this.webGLContexts.edges,this.frameBuffers.edges,this),this}unregisterNodeProgram(e){if(this.nodePrograms[e]){const{[e]:t,...i}=this.nodePrograms;t.kill(),this.nodePrograms=i}if(this.nodeHoverPrograms[e]){const{[e]:t,...i}=this.nodeHoverPrograms;t.kill(),this.nodePrograms=i}return this}unregisterEdgeProgram(e){if(this.edgePrograms[e]){const{[e]:t,...i}=this.edgePrograms;t.kill(),this.edgePrograms=i}return this}resetWebGLTexture(e){const t=this.webGLContexts[e],i=this.frameBuffers[e],n=this.textures[e];n&&t.deleteTexture(n);const s=t.createTexture();return t.bindFramebuffer(t.FRAMEBUFFER,i),t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,this.width,this.height,0,t.RGBA,t.UNSIGNED_BYTE,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0),this.textures[e]=s,this}bindCameraHandlers(){return this.activeListeners.camera=()=>{this.scheduleRender()},this.camera.on("updated",this.activeListeners.camera),this}unbindCameraHandlers(){return this.camera.removeListener("updated",this.activeListeners.camera),this}getNodeAtPosition(e){const{x:t,y:i}=e,n=Ue(this.webGLContexts.nodes,this.frameBuffers.nodes,t,i,this.pixelRatio,this.pickingDownSizingRatio),s=Me(...n),o=this.itemIDsIndex[s];return o&&o.type==="node"?o.id:null}bindEventHandlers(){this.activeListeners.handleResize=()=>{this.scheduleRefresh()},window.addEventListener("resize",this.activeListeners.handleResize),this.activeListeners.handleMove=t=>{const i=ne(t),n={event:i,preventSigmaDefault(){i.preventSigmaDefault()}},s=this.getNodeAtPosition(i);if(s&&this.hoveredNode!==s&&!this.nodeDataCache[s].hidden){this.hoveredNode&&this.emit("leaveNode",{...n,node:this.hoveredNode}),this.hoveredNode=s,this.emit("enterNode",{...n,node:s}),this.scheduleHighlightedNodesRender();return}if(this.hoveredNode&&this.getNodeAtPosition(i)!==this.hoveredNode){const o=this.hoveredNode;this.hoveredNode=null,this.emit("leaveNode",{...n,node:o}),this.scheduleHighlightedNodesRender();return}if(this.settings.enableEdgeEvents){const o=this.hoveredNode?null:this.getEdgeAtPoint(n.event.x,n.event.y);o!==this.hoveredEdge&&(this.hoveredEdge&&this.emit("leaveEdge",{...n,edge:this.hoveredEdge}),o&&this.emit("enterEdge",{...n,edge:o}),this.hoveredEdge=o)}},this.activeListeners.handleMoveBody=t=>{const i=ne(t);this.emit("moveBody",{event:i,preventSigmaDefault(){i.preventSigmaDefault()}})},this.activeListeners.handleLeave=t=>{const i=ne(t),n={event:i,preventSigmaDefault(){i.preventSigmaDefault()}};this.hoveredNode&&(this.emit("leaveNode",{...n,node:this.hoveredNode}),this.scheduleHighlightedNodesRender()),this.settings.enableEdgeEvents&&this.hoveredEdge&&(this.emit("leaveEdge",{...n,edge:this.hoveredEdge}),this.scheduleHighlightedNodesRender()),this.emit("leaveStage",{...n})},this.activeListeners.handleEnter=t=>{const i=ne(t),n={event:i,preventSigmaDefault(){i.preventSigmaDefault()}};this.emit("enterStage",{...n})};const e=t=>i=>{const n=ne(i),s={event:n,preventSigmaDefault:()=>{n.preventSigmaDefault()}},o=this.getNodeAtPosition(n);if(o)return this.emit(`${t}Node`,{...s,node:o});if(this.settings.enableEdgeEvents){const a=this.getEdgeAtPoint(n.x,n.y);if(a)return this.emit(`${t}Edge`,{...s,edge:a})}return this.emit(`${t}Stage`,s)};return this.activeListeners.handleClick=e("click"),this.activeListeners.handleRightClick=e("rightClick"),this.activeListeners.handleDoubleClick=e("doubleClick"),this.activeListeners.handleWheel=e("wheel"),this.activeListeners.handleDown=e("down"),this.activeListeners.handleUp=e("up"),this.mouseCaptor.on("mousemove",this.activeListeners.handleMove),this.mouseCaptor.on("mousemovebody",this.activeListeners.handleMoveBody),this.mouseCaptor.on("click",this.activeListeners.handleClick),this.mouseCaptor.on("rightClick",this.activeListeners.handleRightClick),this.mouseCaptor.on("doubleClick",this.activeListeners.handleDoubleClick),this.mouseCaptor.on("wheel",this.activeListeners.handleWheel),this.mouseCaptor.on("mousedown",this.activeListeners.handleDown),this.mouseCaptor.on("mouseup",this.activeListeners.handleUp),this.mouseCaptor.on("mouseleave",this.activeListeners.handleLeave),this.mouseCaptor.on("mouseenter",this.activeListeners.handleEnter),this.touchCaptor.on("touchdown",this.activeListeners.handleDown),this.touchCaptor.on("touchdown",this.activeListeners.handleMove),this.touchCaptor.on("touchup",this.activeListeners.handleUp),this.touchCaptor.on("touchmove",this.activeListeners.handleMove),this.touchCaptor.on("tap",this.activeListeners.handleClick),this.touchCaptor.on("doubletap",this.activeListeners.handleDoubleClick),this.touchCaptor.on("touchmove",this.activeListeners.handleMoveBody),this}bindGraphHandlers(){const e=this.graph,t=new Set(["x","y","zIndex","type"]);return this.activeListeners.eachNodeAttributesUpdatedGraphUpdate=i=>{var o;const n=(o=i.hints)==null?void 0:o.attributes;this.graph.forEachNode(a=>this.updateNode(a));const s=!n||n.some(a=>t.has(a));this.refresh({partialGraph:{nodes:e.nodes()},skipIndexation:!s,schedule:!0})},this.activeListeners.eachEdgeAttributesUpdatedGraphUpdate=i=>{var o;const n=(o=i.hints)==null?void 0:o.attributes;this.graph.forEachEdge(a=>this.updateEdge(a));const s=n&&["zIndex","type"].some(a=>n==null?void 0:n.includes(a));this.refresh({partialGraph:{edges:e.edges()},skipIndexation:!s,schedule:!0})},this.activeListeners.addNodeGraphUpdate=i=>{const n=i.key;this.addNode(n),this.refresh({partialGraph:{nodes:[n]},skipIndexation:!1,schedule:!0})},this.activeListeners.updateNodeGraphUpdate=i=>{const n=i.key;this.refresh({partialGraph:{nodes:[n]},skipIndexation:!1,schedule:!0})},this.activeListeners.dropNodeGraphUpdate=i=>{const n=i.key;this.removeNode(n),this.refresh({schedule:!0})},this.activeListeners.addEdgeGraphUpdate=i=>{const n=i.key;this.addEdge(n),this.refresh({partialGraph:{edges:[n]},schedule:!0})},this.activeListeners.updateEdgeGraphUpdate=i=>{const n=i.key;this.refresh({partialGraph:{edges:[n]},skipIndexation:!1,schedule:!0})},this.activeListeners.dropEdgeGraphUpdate=i=>{const n=i.key;this.removeEdge(n),this.refresh({schedule:!0})},this.activeListeners.clearEdgesGraphUpdate=()=>{this.clearEdgeState(),this.clearEdgeIndices(),this.refresh({schedule:!0})},this.activeListeners.clearGraphUpdate=()=>{this.clearEdgeState(),this.clearNodeState(),this.clearEdgeIndices(),this.clearNodeIndices(),this.refresh({schedule:!0})},e.on("nodeAdded",this.activeListeners.addNodeGraphUpdate),e.on("nodeDropped",this.activeListeners.dropNodeGraphUpdate),e.on("nodeAttributesUpdated",this.activeListeners.updateNodeGraphUpdate),e.on("eachNodeAttributesUpdated",this.activeListeners.eachNodeAttributesUpdatedGraphUpdate),e.on("edgeAdded",this.activeListeners.addEdgeGraphUpdate),e.on("edgeDropped",this.activeListeners.dropEdgeGraphUpdate),e.on("edgeAttributesUpdated",this.activeListeners.updateEdgeGraphUpdate),e.on("eachEdgeAttributesUpdated",this.activeListeners.eachEdgeAttributesUpdatedGraphUpdate),e.on("edgesCleared",this.activeListeners.clearEdgesGraphUpdate),e.on("cleared",this.activeListeners.clearGraphUpdate),this}unbindGraphHandlers(){const e=this.graph;e.removeListener("nodeAdded",this.activeListeners.addNodeGraphUpdate),e.removeListener("nodeDropped",this.activeListeners.dropNodeGraphUpdate),e.removeListener("nodeAttributesUpdated",this.activeListeners.updateNodeGraphUpdate),e.removeListener("eachNodeAttributesUpdated",this.activeListeners.eachNodeAttributesUpdatedGraphUpdate),e.removeListener("edgeAdded",this.activeListeners.addEdgeGraphUpdate),e.removeListener("edgeDropped",this.activeListeners.dropEdgeGraphUpdate),e.removeListener("edgeAttributesUpdated",this.activeListeners.updateEdgeGraphUpdate),e.removeListener("eachEdgeAttributesUpdated",this.activeListeners.eachEdgeAttributesUpdatedGraphUpdate),e.removeListener("edgesCleared",this.activeListeners.clearEdgesGraphUpdate),e.removeListener("cleared",this.activeListeners.clearGraphUpdate)}getEdgeAtPoint(e,t){const i=Ue(this.webGLContexts.edges,this.frameBuffers.edges,e,t,this.pixelRatio,this.pickingDownSizingRatio),n=Me(...i),s=this.itemIDsIndex[n];return s&&s.type==="edge"?s.id:null}process(){this.emit("beforeProcess");const e=this.graph,t=this.settings,i=this.getDimensions();if(this.nodeExtent=Qi(this.graph),!this.settings.autoRescale){const{width:m,height:_}=i,{x:v,y:b}=this.nodeExtent;this.nodeExtent={x:[(v[0]+v[1])/2-m/2,(v[0]+v[1])/2+m/2],y:[(b[0]+b[1])/2-_/2,(b[0]+b[1])/2+_/2]}}this.normalizationFunction=Ve(this.customBBox||this.nodeExtent);const n=new se,s=te(n.getState(),i,this.getGraphDimensions(),this.getStagePadding());this.labelGrid.resizeAndClear(i,t.labelGridCellSize);const o={},a={},d={},h={};let c=1,u=e.nodes();for(let m=0,_=u.length;m<_;m++){const v=u[m],b=this.nodeDataCache[v],C=e.getNodeAttributes(v);b.x=C.x,b.y=C.y,this.normalizationFunction.applyTo(b),typeof b.label=="string"&&!b.hidden&&this.labelGrid.add(v,b.size,this.framedGraphToViewport(b,{matrix:s})),o[b.type]=(o[b.type]||0)+1}this.labelGrid.organize();for(const m in this.nodePrograms){if(!z.call(this.nodePrograms,m))throw new Error(`Sigma: could not find a suitable program for node type "${m}"!`);this.nodePrograms[m].reallocate(o[m]||0),o[m]=0}this.settings.zIndex&&this.nodeZExtent[0]!==this.nodeZExtent[1]&&(u=We(this.nodeZExtent,m=>this.nodeDataCache[m].zIndex,u));for(let m=0,_=u.length;m<_;m++){const v=u[m];a[v]=c,h[a[v]]={type:"node",id:v},c++;const b=this.nodeDataCache[v];this.addNodeToProgram(v,a[v],o[b.type]++)}const l={};let g=e.edges();for(let m=0,_=g.length;m<_;m++){const v=g[m],b=this.edgeDataCache[v];l[b.type]=(l[b.type]||0)+1}this.settings.zIndex&&this.edgeZExtent[0]!==this.edgeZExtent[1]&&(g=We(this.edgeZExtent,m=>this.edgeDataCache[m].zIndex,g));for(const m in this.edgePrograms){if(!z.call(this.edgePrograms,m))throw new Error(`Sigma: could not find a suitable program for edge type "${m}"!`);this.edgePrograms[m].reallocate(l[m]||0),l[m]=0}for(let m=0,_=g.length;m<_;m++){const v=g[m];d[v]=c,h[d[v]]={type:"edge",id:v},c++;const b=this.edgeDataCache[v];this.addEdgeToProgram(v,d[v],l[b.type]++)}return this.itemIDsIndex=h,this.nodeIndices=a,this.edgeIndices=d,this.emit("afterProcess"),this}handleSettingsUpdate(e){const t=this.settings;if(this.camera.minRatio=t.minCameraRatio,this.camera.maxRatio=t.maxCameraRatio,this.camera.enabledZooming=t.enableCameraZooming,this.camera.enabledPanning=t.enableCameraPanning,this.camera.enabledRotation=t.enableCameraRotation,t.cameraPanBoundaries?this.camera.clean=i=>this.cleanCameraState(i,t.cameraPanBoundaries&&typeof t.cameraPanBoundaries=="object"?t.cameraPanBoundaries:{}):this.camera.clean=null,this.camera.setState(this.camera.validateState(this.camera.getState())),e){if(e.edgeProgramClasses!==t.edgeProgramClasses){for(const i in t.edgeProgramClasses)t.edgeProgramClasses[i]!==e.edgeProgramClasses[i]&&this.registerEdgeProgram(i,t.edgeProgramClasses[i]);for(const i in e.edgeProgramClasses)t.edgeProgramClasses[i]||this.unregisterEdgeProgram(i)}if(e.nodeProgramClasses!==t.nodeProgramClasses||e.nodeHoverProgramClasses!==t.nodeHoverProgramClasses){for(const i in t.nodeProgramClasses)(t.nodeProgramClasses[i]!==e.nodeProgramClasses[i]||t.nodeHoverProgramClasses[i]!==e.nodeHoverProgramClasses[i])&&this.registerNodeProgram(i,t.nodeProgramClasses[i],t.nodeHoverProgramClasses[i]);for(const i in e.nodeProgramClasses)t.nodeProgramClasses[i]||this.unregisterNodeProgram(i)}}return this.mouseCaptor.setSettings(this.settings),this.touchCaptor.setSettings(this.settings),this}cleanCameraState(e,{tolerance:t=0,boundaries:i}={}){const n={...e},{x:[s,o],y:[a,d]}=i||this.nodeExtent,h=[this.graphToViewport({x:s,y:a},{cameraState:e}),this.graphToViewport({x:o,y:a},{cameraState:e}),this.graphToViewport({x:s,y:d},{cameraState:e}),this.graphToViewport({x:o,y:d},{cameraState:e})];let c=1/0,u=-1/0,l=1/0,g=-1/0;h.forEach(({x:f,y:p})=>{c=Math.min(c,f),u=Math.max(u,f),l=Math.min(l,p),g=Math.max(g,p)});const m=u-c,_=g-l,{width:v,height:b}=this.getDimensions();let C=0,S=0;if(m>=v?u<v-t?C=u-(v-t):c>t&&(C=c-t):u>v+t?C=u-(v+t):c<-t&&(C=c+t),_>=b?g<b-t?S=g-(b-t):l>t&&(S=l-t):g>b+t?S=g-(b+t):l<-t&&(S=l+t),C||S){const f=this.viewportToFramedGraph({x:0,y:0},{cameraState:e}),p=this.viewportToFramedGraph({x:C,y:S},{cameraState:e});C=p.x-f.x,S=p.y-f.y,n.x+=C,n.y+=S}return n}renderLabels(){if(!this.settings.renderLabels)return this;const e=this.camera.getState(),t=this.labelGrid.getLabelsToDisplay(e.ratio,this.settings.labelDensity);Be(t,this.nodesWithForcedLabels),this.displayedNodeLabels=new Set;const i=this.canvasContexts.labels;for(let n=0,s=t.length;n<s;n++){const o=t[n],a=this.nodeDataCache[o];if(this.displayedNodeLabels.has(o)||a.hidden)continue;const{x:d,y:h}=this.framedGraphToViewport(a),c=this.scaleSize(a.size);if(!a.forceLabel&&c<this.settings.labelRenderedSizeThreshold||d<-150||d>this.width+Un||h<-50||h>this.height+zn)continue;this.displayedNodeLabels.add(o);const{defaultDrawNodeLabel:u}=this.settings,l=this.nodePrograms[a.type];((l==null?void 0:l.drawLabel)||u)(i,{key:o,...a,size:c,x:d,y:h},this.settings)}return this}renderEdgeLabels(){if(!this.settings.renderEdgeLabels)return this;const e=this.canvasContexts.edgeLabels;e.clearRect(0,0,this.width,this.height);const t=Mn({graph:this.graph,hoveredNode:this.hoveredNode,displayedNodeLabels:this.displayedNodeLabels,highlightedNodes:this.highlightedNodes});Be(t,this.edgesWithForcedLabels);const i=new Set;for(let n=0,s=t.length;n<s;n++){const o=t[n],a=this.graph.extremities(o),d=this.nodeDataCache[a[0]],h=this.nodeDataCache[a[1]],c=this.edgeDataCache[o];if(i.has(o)||c.hidden||d.hidden||h.hidden)continue;const{defaultDrawEdgeLabel:u}=this.settings,l=this.edgePrograms[c.type];((l==null?void 0:l.drawLabel)||u)(e,{key:o,...c,size:this.scaleSize(c.size)},{key:a[0],...d,...this.framedGraphToViewport(d),size:this.scaleSize(d.size)},{key:a[1],...h,...this.framedGraphToViewport(h),size:this.scaleSize(h.size)},this.settings),i.add(o)}return this.displayedEdgeLabels=i,this}renderHighlightedNodes(){const e=this.canvasContexts.hovers;e.clearRect(0,0,this.width,this.height);const t=o=>{const a=this.nodeDataCache[o],{x:d,y:h}=this.framedGraphToViewport(a),c=this.scaleSize(a.size),{defaultDrawNodeHover:u}=this.settings,l=this.nodePrograms[a.type];((l==null?void 0:l.drawHover)||u)(e,{key:o,...a,size:c,x:d,y:h},this.settings)},i=[];this.hoveredNode&&!this.nodeDataCache[this.hoveredNode].hidden&&i.push(this.hoveredNode),this.highlightedNodes.forEach(o=>{o!==this.hoveredNode&&i.push(o)}),i.forEach(o=>t(o));const n={};i.forEach(o=>{const a=this.nodeDataCache[o].type;n[a]=(n[a]||0)+1});for(const o in this.nodeHoverPrograms)this.nodeHoverPrograms[o].reallocate(n[o]||0),n[o]=0;i.forEach(o=>{const a=this.nodeDataCache[o];this.nodeHoverPrograms[a.type].process(0,n[a.type]++,a)}),this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);const s=this.getRenderParams();for(const o in this.nodeHoverPrograms)this.nodeHoverPrograms[o].render(s)}scheduleHighlightedNodesRender(){this.renderHighlightedNodesFrame||this.renderFrame||(this.renderHighlightedNodesFrame=requestAnimationFrame(()=>{this.renderHighlightedNodesFrame=null,this.renderHighlightedNodes(),this.renderEdgeLabels()}))}render(){this.emit("beforeRender");const e=()=>(this.emit("afterRender"),this);if(this.renderFrame&&(cancelAnimationFrame(this.renderFrame),this.renderFrame=null),this.resize(),this.needToProcess&&this.process(),this.needToProcess=!1,this.clear(),this.pickingLayers.forEach(h=>this.resetWebGLTexture(h)),!this.graph.order)return e();const t=this.mouseCaptor,i=this.camera.isAnimated()||t.isMoving||t.draggedEvents||t.currentWheelDirection,n=this.camera.getState(),s=this.getDimensions(),o=this.getGraphDimensions(),a=this.getStagePadding();this.matrix=te(n,s,o,a),this.invMatrix=te(n,s,o,a,!0),this.correctionRatio=qi(this.matrix,n,s),this.graphToViewportRatio=this.getGraphToViewportRatio();const d=this.getRenderParams();for(const h in this.nodePrograms)this.nodePrograms[h].render(d);if(!this.settings.hideEdgesOnMove||!i)for(const h in this.edgePrograms)this.edgePrograms[h].render(d);return this.settings.hideLabelsOnMove&&i||(this.renderLabels(),this.renderEdgeLabels(),this.renderHighlightedNodes()),e()}addNode(e){let t=Object.assign({},this.graph.getNodeAttributes(e));this.settings.nodeReducer&&(t=this.settings.nodeReducer(e,t));const i=On(this.settings,e,t);this.nodeDataCache[e]=i,this.nodesWithForcedLabels.delete(e),i.forceLabel&&!i.hidden&&this.nodesWithForcedLabels.add(e),this.highlightedNodes.delete(e),i.highlighted&&!i.hidden&&this.highlightedNodes.add(e),this.settings.zIndex&&(i.zIndex<this.nodeZExtent[0]&&(this.nodeZExtent[0]=i.zIndex),i.zIndex>this.nodeZExtent[1]&&(this.nodeZExtent[1]=i.zIndex))}updateNode(e){this.addNode(e);const t=this.nodeDataCache[e];this.normalizationFunction.applyTo(t)}removeNode(e){delete this.nodeDataCache[e],delete this.nodeProgramIndex[e],this.highlightedNodes.delete(e),this.hoveredNode===e&&(this.hoveredNode=null),this.nodesWithForcedLabels.delete(e)}addEdge(e){let t=Object.assign({},this.graph.getEdgeAttributes(e));this.settings.edgeReducer&&(t=this.settings.edgeReducer(e,t));const i=Bn(this.settings,e,t);this.edgeDataCache[e]=i,this.edgesWithForcedLabels.delete(e),i.forceLabel&&!i.hidden&&this.edgesWithForcedLabels.add(e),this.settings.zIndex&&(i.zIndex<this.edgeZExtent[0]&&(this.edgeZExtent[0]=i.zIndex),i.zIndex>this.edgeZExtent[1]&&(this.edgeZExtent[1]=i.zIndex))}updateEdge(e){this.addEdge(e)}removeEdge(e){delete this.edgeDataCache[e],delete this.edgeProgramIndex[e],this.hoveredEdge===e&&(this.hoveredEdge=null),this.edgesWithForcedLabels.delete(e)}clearNodeIndices(){this.labelGrid=new Qe,this.nodeExtent={x:[0,1],y:[0,1]},this.nodeDataCache={},this.edgeProgramIndex={},this.nodesWithForcedLabels=new Set,this.nodeZExtent=[1/0,-1/0],this.highlightedNodes=new Set}clearEdgeIndices(){this.edgeDataCache={},this.edgeProgramIndex={},this.edgesWithForcedLabels=new Set,this.edgeZExtent=[1/0,-1/0]}clearIndices(){this.clearEdgeIndices(),this.clearNodeIndices()}clearNodeState(){this.displayedNodeLabels=new Set,this.highlightedNodes=new Set,this.hoveredNode=null}clearEdgeState(){this.displayedEdgeLabels=new Set,this.highlightedNodes=new Set,this.hoveredEdge=null}clearState(){this.clearEdgeState(),this.clearNodeState()}addNodeToProgram(e,t,i){const n=this.nodeDataCache[e],s=this.nodePrograms[n.type];if(!s)throw new Error(`Sigma: could not find a suitable program for node type "${n.type}"!`);s.process(t,i,n),this.nodeProgramIndex[e]=i}addEdgeToProgram(e,t,i){const n=this.edgeDataCache[e],s=this.edgePrograms[n.type];if(!s)throw new Error(`Sigma: could not find a suitable program for edge type "${n.type}"!`);const o=this.graph.extremities(e),a=this.nodeDataCache[o[0]],d=this.nodeDataCache[o[1]];s.process(t,i,a,d,n),this.edgeProgramIndex[e]=i}getRenderParams(){return{matrix:this.matrix,invMatrix:this.invMatrix,width:this.width,height:this.height,pixelRatio:this.pixelRatio,zoomRatio:this.camera.ratio,cameraAngle:this.camera.angle,sizeRatio:1/this.scaleSize(),correctionRatio:this.correctionRatio,downSizingRatio:this.pickingDownSizingRatio,minEdgeThickness:this.settings.minEdgeThickness,antiAliasingFeather:this.settings.antiAliasingFeather}}getStagePadding(){const{stagePadding:e,autoRescale:t}=this.settings;return t&&e||0}createLayer(e,t,i={}){if(this.elements[e])throw new Error(`Sigma: a layer named "${e}" already exists`);const n=tn(t,{position:"absolute"},{class:`sigma-${e}`});return i.style&&Object.assign(n.style,i.style),this.elements[e]=n,"beforeLayer"in i&&i.beforeLayer?this.elements[i.beforeLayer].before(n):"afterLayer"in i&&i.afterLayer?this.elements[i.afterLayer].after(n):this.container.appendChild(n),n}createCanvas(e,t={}){return this.createLayer(e,"canvas",t)}createCanvasContext(e,t={}){const i=this.createCanvas(e,t),n={preserveDrawingBuffer:!1,antialias:!1};return this.canvasContexts[e]=i.getContext("2d",n),this}createWebGLContext(e,t={}){const i=(t==null?void 0:t.canvas)||this.createCanvas(e,t);t.hidden&&i.remove();const n={preserveDrawingBuffer:!1,antialias:!1,...t};let s;s=i.getContext("webgl2",n),s||(s=i.getContext("webgl",n)),s||(s=i.getContext("experimental-webgl",n));const o=s;if(this.webGLContexts[e]=o,o.blendFunc(o.ONE,o.ONE_MINUS_SRC_ALPHA),t.picking){this.pickingLayers.add(e);const a=o.createFramebuffer();if(!a)throw new Error(`Sigma: cannot create a new frame buffer for layer ${e}`);this.frameBuffers[e]=a}return o}killLayer(e){var i;const t=this.elements[e];if(!t)throw new Error(`Sigma: cannot kill layer ${e}, which does not exist`);return this.webGLContexts[e]?((i=this.webGLContexts[e].getExtension("WEBGL_lose_context"))==null||i.loseContext(),delete this.webGLContexts[e]):this.canvasContexts[e]&&delete this.canvasContexts[e],t.remove(),delete this.elements[e],this}getCamera(){return this.camera}setCamera(e){this.unbindCameraHandlers(),this.camera=e,this.bindCameraHandlers()}getContainer(){return this.container}getGraph(){return this.graph}setGraph(e){e!==this.graph&&(this.hoveredNode&&!e.hasNode(this.hoveredNode)&&(this.hoveredNode=null),this.hoveredEdge&&!e.hasEdge(this.hoveredEdge)&&(this.hoveredEdge=null),this.unbindGraphHandlers(),this.checkEdgesEventsFrame!==null&&(cancelAnimationFrame(this.checkEdgesEventsFrame),this.checkEdgesEventsFrame=null),this.graph=e,this.bindGraphHandlers(),this.refresh())}getMouseCaptor(){return this.mouseCaptor}getTouchCaptor(){return this.touchCaptor}getDimensions(){return{width:this.width,height:this.height}}getGraphDimensions(){const e=this.customBBox||this.nodeExtent;return{width:e.x[1]-e.x[0]||1,height:e.y[1]-e.y[0]||1}}getNodeDisplayData(e){const t=this.nodeDataCache[e];return t?Object.assign({},t):void 0}getEdgeDisplayData(e){const t=this.edgeDataCache[e];return t?Object.assign({},t):void 0}getNodeDisplayedLabels(){return new Set(this.displayedNodeLabels)}getEdgeDisplayedLabels(){return new Set(this.displayedEdgeLabels)}getSettings(){return{...this.settings}}getSetting(e){return this.settings[e]}setSetting(e,t){const i={...this.settings};return this.settings[e]=t,xe(this.settings),this.handleSettingsUpdate(i),this.scheduleRefresh(),this}updateSetting(e,t){return this.setSetting(e,t(this.settings[e])),this}setSettings(e){const t={...this.settings};return this.settings={...this.settings,...e},xe(this.settings),this.handleSettingsUpdate(t),this.scheduleRefresh(),this}resize(e){const t=this.width,i=this.height;if(this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.pixelRatio=He(),this.width===0)if(this.settings.allowInvalidContainer)this.width=1;else throw new Error("Sigma: Container has no width. You can set the allowInvalidContainer setting to true to stop seeing this error.");if(this.height===0)if(this.settings.allowInvalidContainer)this.height=1;else throw new Error("Sigma: Container has no height. You can set the allowInvalidContainer setting to true to stop seeing this error.");if(!e&&t===this.width&&i===this.height)return this;for(const n in this.elements){const s=this.elements[n];s.style.width=this.width+"px",s.style.height=this.height+"px"}for(const n in this.canvasContexts)this.elements[n].setAttribute("width",this.width*this.pixelRatio+"px"),this.elements[n].setAttribute("height",this.height*this.pixelRatio+"px"),this.pixelRatio!==1&&this.canvasContexts[n].scale(this.pixelRatio,this.pixelRatio);for(const n in this.webGLContexts){this.elements[n].setAttribute("width",this.width*this.pixelRatio+"px"),this.elements[n].setAttribute("height",this.height*this.pixelRatio+"px");const s=this.webGLContexts[n];if(s.viewport(0,0,this.width*this.pixelRatio,this.height*this.pixelRatio),this.pickingLayers.has(n)){const o=this.textures[n];o&&s.deleteTexture(o)}}return this.emit("resize"),this}clear(){return this.emit("beforeClear"),this.webGLContexts.nodes.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER,null),this.webGLContexts.nodes.clear(WebGLRenderingContext.COLOR_BUFFER_BIT),this.webGLContexts.edges.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER,null),this.webGLContexts.edges.clear(WebGLRenderingContext.COLOR_BUFFER_BIT),this.webGLContexts.hoverNodes.clear(WebGLRenderingContext.COLOR_BUFFER_BIT),this.canvasContexts.labels.clearRect(0,0,this.width,this.height),this.canvasContexts.hovers.clearRect(0,0,this.width,this.height),this.canvasContexts.edgeLabels.clearRect(0,0,this.width,this.height),this.emit("afterClear"),this}refresh(e){var s,o;const t=(e==null?void 0:e.skipIndexation)!==void 0?e==null?void 0:e.skipIndexation:!1,i=(e==null?void 0:e.schedule)!==void 0?e.schedule:!1,n=!e||!e.partialGraph;if(n)this.clearEdgeIndices(),this.clearNodeIndices(),this.graph.forEachNode(a=>this.addNode(a)),this.graph.forEachEdge(a=>this.addEdge(a));else{const a=((s=e.partialGraph)==null?void 0:s.nodes)||[];for(let h=0,c=(a==null?void 0:a.length)||0;h<c;h++){const u=a[h];if(this.updateNode(u),t){const l=this.nodeProgramIndex[u];if(l===void 0)throw new Error(`Sigma: node "${u}" can't be repaint`);this.addNodeToProgram(u,this.nodeIndices[u],l)}}const d=((o=e==null?void 0:e.partialGraph)==null?void 0:o.edges)||[];for(let h=0,c=d.length;h<c;h++){const u=d[h];if(this.updateEdge(u),t){const l=this.edgeProgramIndex[u];if(l===void 0)throw new Error(`Sigma: edge "${u}" can't be repaint`);this.addEdgeToProgram(u,this.edgeIndices[u],l)}}}return(n||!t)&&(this.needToProcess=!0),i?this.scheduleRender():this.render(),this}scheduleRender(){return this.renderFrame||(this.renderFrame=requestAnimationFrame(()=>{this.render()})),this}scheduleRefresh(e){return this.refresh({...e,schedule:!0})}getViewportZoomedState(e,t){const{ratio:i,angle:n,x:s,y:o}=this.camera.getState(),{minCameraRatio:a,maxCameraRatio:d}=this.settings;typeof d=="number"&&(t=Math.min(t,d)),typeof a=="number"&&(t=Math.max(t,a));const h=t/i,c={x:this.width/2,y:this.height/2},u=this.viewportToFramedGraph(e),l=this.viewportToFramedGraph(c);return{angle:n,x:(u.x-l.x)*(1-h)+s,y:(u.y-l.y)*(1-h)+o,ratio:t}}viewRectangle(){const e=this.viewportToFramedGraph({x:0,y:0}),t=this.viewportToFramedGraph({x:this.width,y:0}),i=this.viewportToFramedGraph({x:0,y:this.height});return{x1:e.x,y1:e.y,x2:t.x,y2:t.y,height:t.y-i.y}}framedGraphToViewport(e,t={}){const i=!!t.cameraState||!!t.viewportDimensions||!!t.graphDimensions,n=t.matrix?t.matrix:i?te(t.cameraState||this.camera.getState(),t.viewportDimensions||this.getDimensions(),t.graphDimensions||this.getGraphDimensions(),t.padding||this.getStagePadding()):this.matrix,s=_e(n,e);return{x:(1+s.x)*this.width/2,y:(1-s.y)*this.height/2}}viewportToFramedGraph(e,t={}){const i=!!t.cameraState||!!t.viewportDimensions||!t.graphDimensions,n=t.matrix?t.matrix:i?te(t.cameraState||this.camera.getState(),t.viewportDimensions||this.getDimensions(),t.graphDimensions||this.getGraphDimensions(),t.padding||this.getStagePadding(),!0):this.invMatrix,s=_e(n,{x:e.x/this.width*2-1,y:1-e.y/this.height*2});return isNaN(s.x)&&(s.x=0),isNaN(s.y)&&(s.y=0),s}viewportToGraph(e,t={}){return this.normalizationFunction.inverse(this.viewportToFramedGraph(e,t))}graphToViewport(e,t={}){return this.framedGraphToViewport(this.normalizationFunction(e),t)}getGraphToViewportRatio(){const e={x:0,y:0},t={x:1,y:1},i=Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)),n=this.graphToViewport(e),s=this.graphToViewport(t);return Math.sqrt(Math.pow(n.x-s.x,2)+Math.pow(n.y-s.y,2))/i}getBBox(){return this.nodeExtent}getCustomBBox(){return this.customBBox}setCustomBBox(e){return this.customBBox=e,this.scheduleRender(),this}kill(){this.emit("kill"),this.removeAllListeners(),this.unbindCameraHandlers(),window.removeEventListener("resize",this.activeListeners.handleResize),this.mouseCaptor.kill(),this.touchCaptor.kill(),this.unbindGraphHandlers(),this.clearIndices(),this.clearState(),this.nodeDataCache={},this.edgeDataCache={},this.highlightedNodes.clear(),this.renderFrame&&(cancelAnimationFrame(this.renderFrame),this.renderFrame=null),this.renderHighlightedNodesFrame&&(cancelAnimationFrame(this.renderHighlightedNodesFrame),this.renderHighlightedNodesFrame=null);const e=this.container;for(;e.firstChild;)e.removeChild(e.firstChild);for(const t in this.nodePrograms)this.nodePrograms[t].kill();for(const t in this.nodeHoverPrograms)this.nodeHoverPrograms[t].kill();for(const t in this.edgePrograms)this.edgePrograms[t].kill();this.nodePrograms={},this.nodeHoverPrograms={},this.edgePrograms={};for(const t in this.elements)this.killLayer(t);this.canvasContexts={},this.webGLContexts={},this.elements={}}scaleSize(e=1,t=this.camera.ratio){return e/this.settings.zoomToSizeRatioFunction(t)*(this.getSetting("itemSizesReference")==="positions"?t*this.graphToViewportRatio:1)}getCanvases(){const e={};for(const t in this.elements)this.elements[t]instanceof HTMLCanvasElement&&(e[t]=this.elements[t]);return e}}export{Ge as D,Re as E,D as G,lt as M,hn as N,xt as P,Qn as S,Sn as a,Vn as b,jn as c,_t as d,et as e,X as f,Zi as g,Zn as h,Te as i,At as j,Tt as k,dn as l,Ct as m,Yn as n,_n as o,An as p,Mi as r,Wn as w};
