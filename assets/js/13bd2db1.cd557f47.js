"use strict";(self.webpackChunk_sigma_website=self.webpackChunk_sigma_website||[]).push([[8828],{506:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"advanced/publish","title":"Publishing new versions","description":"As the code is structured as a monorepo, we use Lerna to help version and publish the different packages handled in the repository.","source":"@site/docs/advanced/publish.md","sourceDirName":"advanced","slug":"/advanced/publish","permalink":"/docs/advanced/publish","draft":false,"unlisted":false,"editUrl":"https://github.com/jacomyal/sigma.js/tree/main/packages/website/docs/advanced/publish.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"title":"Publishing new versions","sidebar_position":9},"sidebar":"sigmaDocSidebar","previous":{"title":"Creating new packages","permalink":"/docs/advanced/new-packages"},"next":{"title":"Migrating from v2 to v3","permalink":"/docs/advanced/migration-v2-v3"}}');var a=s(1085),i=s(1184);const o={title:"Publishing new versions",sidebar_position:9},r=void 0,c={},d=[];function l(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["As the code is structured as a monorepo, we use ",(0,a.jsx)(n.a,{href:"https://github.com/lerna/lerna",children:"Lerna"})," to help version and publish the different packages handled in the repository."]}),"\n",(0,a.jsx)(n.p,{children:"To check packages that require a new version, you can run:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"lerna version\n"})}),"\n",(0,a.jsx)(n.p,{children:"This will ask you, for each package that has been edited since its last release, to specify a new version. Once it's done, a new commit has been added locally, with new tags, matching each package new version. It does not push by default."}),"\n",(0,a.jsxs)(n.p,{children:["To publish these new versions on ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/",children:"NPM"}),", you can run:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"lerna publish from-package\n"})}),"\n",(0,a.jsx)(n.p,{children:"Once you validate the new versions to publish, it will publish each of these versions to NPM."}),"\n",(0,a.jsxs)(n.p,{children:["If you name your remote differently than ",(0,a.jsx)(n.code,{children:"origin"}),", you need to add the option ",(0,a.jsx)(n.code,{children:"--git-remote=<REMOTE_NAME>"})," to both commands;"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},1184:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(4041);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);