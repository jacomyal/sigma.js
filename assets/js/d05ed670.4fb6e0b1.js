"use strict";(self.webpackChunk_sigma_website=self.webpackChunk_sigma_website||[]).push([[3386],{2577:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"typedoc/layer-maplibre/src/functions/default","title":"Function: default()","description":"default(sigma, opts?): object","source":"@site/docs/typedoc/layer-maplibre/src/functions/default.md","sourceDirName":"typedoc/layer-maplibre/src/functions","slug":"/typedoc/layer-maplibre/src/functions/default","permalink":"/docs/typedoc/layer-maplibre/src/functions/default","draft":false,"unlisted":false,"editUrl":"https://github.com/jacomyal/sigma.js/tree/main/packages/website/docs/typedoc/layer-maplibre/src/functions/default.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sigmaDocSidebar","previous":{"title":"layer-maplibre/src","permalink":"/docs/typedoc/layer-maplibre/src/"},"next":{"title":"graphToLatlng","permalink":"/docs/typedoc/layer-maplibre/src/functions/graphToLatlng"}}');var t=r(1085),i=r(1184);const c={},l="Function: default()",d={},a=[{value:"Parameters",id:"parameters",level:2},{value:"sigma",id:"sigma",level:3},{value:"opts?",id:"opts",level:3},{value:"getNodeLatLng",id:"getnodelatlng",level:4},{value:"mapOptions",id:"mapoptions",level:4},{value:"Returns",id:"returns",level:2},{value:"clean()",id:"clean",level:3},{value:"Returns",id:"returns-1",level:4},{value:"map",id:"map",level:3},{value:"updateGraphCoordinates()",id:"updategraphcoordinates",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"graph",id:"graph",level:5},{value:"Returns",id:"returns-2",level:4}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"function-default",children:"Function: default()"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"default"}),"(",(0,t.jsx)(n.code,{children:"sigma"}),", ",(0,t.jsx)(n.code,{children:"opts"}),"?): ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Defined in: ",(0,t.jsx)(n.a,{href:"https://github.com/jacomyal/sigma.js/blob/13062dc5be4f876d7c188411b120bb5a3a0be6f4/packages/layer-maplibre/src/index.ts#L15",children:"layer-maplibre/src/index.ts:15"})]}),"\n",(0,t.jsx)(n.p,{children:"On the graph, we store the 2D projection of the geographical lat/long."}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h3,{id:"sigma",children:"sigma"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/typedoc/sigma/src/classes/Sigma",children:(0,t.jsx)(n.code,{children:"Sigma"})})}),"\n",(0,t.jsx)(n.p,{children:"The sigma instance"}),"\n",(0,t.jsx)(n.h3,{id:"opts",children:"opts?"}),"\n",(0,t.jsx)(n.h4,{id:"getnodelatlng",children:"getNodeLatLng"}),"\n",(0,t.jsxs)(n.p,{children:["(",(0,t.jsx)(n.code,{children:"nodeAttributes"}),") => ",(0,t.jsx)(n.code,{children:"object"})]}),"\n",(0,t.jsx)(n.p,{children:"Function to retrieve lat/long values from a node's attributs (default is lat & lng)"}),"\n",(0,t.jsx)(n.h4,{id:"mapoptions",children:"mapOptions"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Omit"}),"<",(0,t.jsx)(n.code,{children:"MapOptions"}),", ",(0,t.jsx)(n.code,{children:'"center"'})," | ",(0,t.jsx)(n.code,{children:'"container"'})," | ",(0,t.jsx)(n.code,{children:'"zoom"'})," | ",(0,t.jsx)(n.code,{children:'"minPitch"'})," | ",(0,t.jsx)(n.code,{children:'"maxPitch"'}),">"]}),"\n",(0,t.jsx)(n.p,{children:"Options that will be provided to map constructor."}),"\n",(0,t.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"object"})}),"\n",(0,t.jsx)(n.h3,{id:"clean",children:"clean()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"clean"}),": () => ",(0,t.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n",(0,t.jsx)(n.h3,{id:"map",children:"map"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"map"}),": ",(0,t.jsx)(n.code,{children:"Map$1"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"updategraphcoordinates",children:"updateGraphCoordinates()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"updateGraphCoordinates"}),": (",(0,t.jsx)(n.code,{children:"graph"}),") => ",(0,t.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsx)(n.h5,{id:"graph",children:"graph"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Graph"})}),"\n",(0,t.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},1184:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>l});var s=r(4041);const t={},i=s.createContext(t);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);