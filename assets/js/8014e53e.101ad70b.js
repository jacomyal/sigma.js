"use strict";(self.webpackChunk_sigma_website=self.webpackChunk_sigma_website||[]).push([[1818],{8360:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"advanced/new-packages","title":"Creating new packages","description":"From version 3, the source code of sigma.js is structured as a monorepo. We use Preconstruct to build the packages for development and production, and Lerna to manage versions lifecycle. Finally, on NPM, sigma is split into the core sigma package, and various @sigma/xxx feature packages.","source":"@site/docs/advanced/new-packages.md","sourceDirName":"advanced","slug":"/advanced/new-packages","permalink":"/docs/advanced/new-packages","draft":false,"unlisted":false,"editUrl":"https://github.com/jacomyal/sigma.js/tree/main/packages/website/docs/advanced/new-packages.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"title":"Creating new packages","sidebar_position":8},"sidebar":"sigmaDocSidebar","previous":{"title":"Events","permalink":"/docs/advanced/events"},"next":{"title":"Publishing new versions","permalink":"/docs/advanced/publish"}}');var t=s(1085),i=s(1184);const o={title:"Creating new packages",sidebar_position:8},r="Adding new packages",c={},d=[{value:"Creating a new package",id:"creating-a-new-package",level:2},{value:"Adding stories",id:"adding-stories",level:2},{value:"Adding tests",id:"adding-tests",level:2}];function l(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"adding-new-packages",children:"Adding new packages"})}),"\n",(0,t.jsxs)(a.p,{children:["From version 3, the source code of sigma.js is structured as a ",(0,t.jsx)(a.a,{href:"https://monorepo.tools/",children:"monorepo"}),". We use ",(0,t.jsx)(a.a,{href:"https://preconstruct.tools/",children:"Preconstruct"})," to build the packages for development and production, and ",(0,t.jsx)(a.a,{href:"https://lerna.js.org/",children:"Lerna"})," to manage versions lifecycle. Finally, on ",(0,t.jsx)(a.a,{href:"https://www.npmjs.com/org/sigma",children:"NPM"}),", sigma is split into the core ",(0,t.jsx)(a.code,{children:"sigma"})," package, and various ",(0,t.jsx)(a.code,{children:"@sigma/xxx"})," feature packages."]}),"\n",(0,t.jsx)(a.p,{children:"This approach allows to maintain multiple features, that are too specialized to be included in the main repository, without the cost of creating and managing multiple Git/GitHub repositories."}),"\n",(0,t.jsx)(a.p,{children:"As of now, the features are prefixed by their general purpose:"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"@sigma/node-xxx"})," and ",(0,t.jsx)(a.code,{children:"@sigma/edge-xxx"})," refer to node and edge renderer"]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"@sigma/layer-xxx"})," refers to additional layers that can be added to sigma instances"]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"@sigma/export-xxx"})," refers to packages that allow exporting somehow a sigma instance"]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"@sigma/utils"})," stores various small specific helpers"]}),"\n"]}),"\n",(0,t.jsx)(a.h2,{id:"creating-a-new-package",children:"Creating a new package"}),"\n",(0,t.jsxs)(a.p,{children:["To create a new package, you first need to get a clean local instance of sigma, with up-to-date versions of Git, Node.js and NPM. Then, go to the root of the repository, and run ",(0,t.jsx)(a.code,{children:"npm run createPackage"}),". You will be prompted for the new package name (excluding the ",(0,t.jsx)(a.code,{children:"@sigma/"})," namespace), after which a fresh, empty package will be created and referenced wherever necessary."]}),"\n",(0,t.jsx)(a.h2,{id:"adding-stories",children:"Adding stories"}),"\n",(0,t.jsxs)(a.p,{children:["All stories are in the ",(0,t.jsx)(a.code,{children:"packages/storybook"})," package. The Storybook is primarily a playground for testing features while developing, but it ultimately becomes the public showcase and documentation of new packages. It helps new users understand what each package can do and how."]}),"\n",(0,t.jsxs)(a.p,{children:["Each package can provide stories in the ",(0,t.jsx)(a.code,{children:"packages/storybook/stories/3-additional-packages"})," folder. The easiest way to get started is to review the stories from some similar existing package."]}),"\n",(0,t.jsx)(a.h2,{id:"adding-tests",children:"Adding tests"}),"\n",(0,t.jsx)(a.p,{children:"Since most additional packages only handle rendering, unit-testing them is too challenging. In the future, we plan to include all Storybook stories in our end-to-end tests to detect rendering regressions."}),"\n",(0,t.jsxs)(a.p,{children:["However, some packages might export unit-testable helpers (such as ",(0,t.jsx)(a.code,{children:"@sigma/utils"}),"). In that case, you can add a ",(0,t.jsx)(a.code,{children:"package-name"})," folder in ",(0,t.jsx)(a.code,{children:"packages/test/unit"}),", with tests suites in it."]})]})}function p(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1184:(e,a,s)=>{s.d(a,{R:()=>o,x:()=>r});var n=s(4041);const t={},i=n.createContext(t);function o(e){const a=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(i.Provider,{value:a},e.children)}}}]);